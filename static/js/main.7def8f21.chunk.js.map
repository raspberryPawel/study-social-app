{"version":3,"sources":["common/CustomScrollbar.tsx","consts/SeparatorVariant.ts","assets/icons/ecosystem.svg","assets/icons/entities2.svg","assets/icons/network.svg","assets/icons/plus.svg","assets/icons/publications.svg","assets/icons/user-plus.svg","common/ButtonWithLink.tsx","common/SectionSeparator.tsx","consts/AccessType.ts","components/mainPage/LeftSection.tsx","common/EditableText.tsx","assets/icons/settings.svg","consts/Condition.ts","consts/FilterByProperty.ts","consts/LogicalOperation.ts","components/advancedAccountInfo/AdvancedAccountInfoEditableSection.tsx","components/advancedAccountInfo/AccountSkillsElement.tsx","components/advancedAccountInfo/AdvancedAccountInfo.tsx","components/advancedAccountInfo/SingleAdvancedAccountInfoElement.tsx","components/advancedAccountInfo/AmountOfFees.tsx","components/advancedAccountInfo/InternalReviews.tsx","assets/icons/document.svg","common/Attachment.tsx","components/advancedAccountInfo/PanelInformations.tsx","components/advancedAccountInfo/Proposals.tsx","assets/icons/comments.svg","assets/icons/people.svg","common/InternalCorrespondent.tsx","components/advancedAccountInfo/ServicesAndProjects.tsx","components/advancedAccountInfo/TopButtons.tsx","containers/AdvancedAccountInfoPage.tsx","assets/variables.ts","common/DropdownContainer.tsx","consts/ViewMode.ts","components/entities/SingleFilterDefinition.tsx","components/entities/AdvancedFiltersView.tsx","components/entities/FirstFiltersSection.tsx","common/FollowedButton.tsx","components/entities/SecondFiltersSection.tsx","components/entities/EntitiesFilters.tsx","consts/EntitiesFiltersDefinitions.ts","common/PaginationView.tsx","components/entities/EntitiesView.tsx","common/SectionTitle.tsx","components/entities/Header.tsx","containers/Entities.tsx","assets/icons/404.svg","containers/NotFoundPage.tsx","assets/images/enxampleperson.png","components/mainPage/SinglePublication.tsx","containers/Publications.tsx","common/WorkspaceImage.ts","components/workspaceView/SingleEditableWorkspace.tsx","common/DotSeparator.tsx","components/mainPage/SingleWork.tsx","common/SectionHeaderWithFilterInput.tsx","components/workspaceView/WorkspaceLastUpdates.tsx","components/workspaceView/WorkspaceTiles.tsx","containers/Workspaces.tsx","assets/icons/house.svg","assets/icons/entities.svg","assets/icons/administration.svg","assets/icons/open-book.svg","assets/icons/logout.svg","assets/icons/privacy.svg","components/navbar/AccountInfo.tsx","consts/DropdownSections.tsx","components/mainPage/LatestPublications.tsx","components/mainPage/ResumeYourWork.tsx","components/mainPage/SingleWorkspace.tsx","components/mainPage/Workspaces.tsx","components/mainPage/MainSectionContent.tsx","components/mainPage/RightSection.tsx","components/mainPage/MainPageContent.tsx","containers/MainPage.tsx","assets/images/logo.png","assets/icons/arrow-down.svg","components/navbar/DropdownView.tsx","components/navbar/NavDropdown.tsx","common/ButtonWithBadge.tsx","containers/NavBar.tsx","api/MainPageApi.ts","api/AdvancedAccountInfoApi.ts","stores/AdvancedAccountInfo.ts","api/EntitiesApi.ts","stores/EntitiesStore.ts","stores/MainPageStore.ts","stores/RootStore.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CustomScrollbar","state","isFocused","childrenHeight","scrollbar","onBodyWheel","e","preventDefault","onMouseOver","props","scrollHorizontallyOnWheel","setState","onMouseLeave","onWheel","scrollHorizontallyMultiplier","scroll","getScrollLeft","deltaY","scrollLeft","onHeightReady","height","document","body","addEventListener","this","passive","removeEventListener","styles","maxHeight","style","className","ref","node","children","Component","defaultProps","autoHeight","SeparatorVariant","Container","styled","div","Wrapper","ButtonWithLink","link","icon","text","onClick","endAdornment","to","Button","src","alt","AccessType","border","Separator","variant","VERTICAL","SectionSeparator","options","title","publications","ecosystem","entities","LeftSectionContainer","PaperButtons","NavOptions","AccountSection","section","AccountDetails","LeftSection","inject","observer","mainPageStore","currentLoggedUser","Paper","Avatar","name","photo","url","width","username","company","network","addNewPerson","addNewPublication","map","option","changeCurrentDropdownSection","EditableTextContainer","EditableText","editOnClick","multiline","isEditable","onChange","useState","isEditMode","changeMode","useEffect","TextField","autoFocus","defaultValue","target","value","onBlur","event","input","rowsMax","Condition","FilterByProperty","LogicalOperation","EditableSectionContainer","AdvancedAccountInfoEditableSection","READ","EDIT","mode","changeLocalMode","newMode","iconEdit","defaultSections","sectionName","elements","AccountSkillsContainer","AccountSkills","SkillsContainer","blue","AccountSkillsElement","sections","changeSections","skill","index","allSections","currentSection","find","onSkillEdit","placeholder","inputValue","length","push","addNewElement","AdvancedAccountInfoContainer","AvatarContainer","AccountInfo","AdditionalInfo","AdvancedAccountInfo","user","address","city","role","email","phone","SingleAdvancedAccountInfoElement","AmountOfFees","advancedAccountInfo","fees","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","TableBody","row","year","costCenter","totalAmount","lawFirm","id","InternalReviews","proposals","reviews","slice","scope","entity","expertise","date","toDateString","AttachmentContainer","grey","Attachment","file","PanelInformation","PanelInformations","Proposals","InternalCorrespondentContainer","InternalCorrespondent","message","profile","InternalCorrespondents","ServicesAndProjects","TopButtonsContainer","TopButtons","AdvancedAccountInfoPage","defaultBoxShadow","DropdownContainerView","DropdownView","DropdownContainer","isOpen","toggleDropdown","ClickAwayListener","mouseEvent","onClickAway","React","cloneElement","buttonView","ViewMode","SingleFilterContainer","SingleFilterDefinition","entitiesStore","filterDefinition","getMenuItems","changeText","conditionName","condition","changeFilterDefinitionInputValue","removeFilterDefinition","Select","logicalOperation","WHERE","changeLogicalOperation","filterByProperty","COMPANY","changeFilterByProperty","CONTAINS","changeCondition","conditionValue","ENDS_BEFORE","MenuItem","AdvancedFiltersContainer","AdvancedFiltersView","logicalOperator","changeOperator","filterDefinitions","values","changeFn","Object","filter","addNewFilterDefinition","nextFilterId","EntitiesFiltersSectionView","FirstFiltersSection","changeFullScreen","fullScreenMode","FollowedButton","EntitiesSecondFiltersSectionView","SecondFiltersSection","OutlinedInput","type","filterInputValue","changeFilterInputValue","InputAdornment","position","EntitiesFiltersView","EntitiesFilters","EntitiesFiltersName","PaginationView","list","countPerPage","renderListElement","pageNumber","changePageNumber","pagesCount","changePagesCount","getCountPerPage","nextPagesCount","Math","ceil","getIndex","element","Pagination","page","count","display","justifyContent","EntitiesContainer","SingleEntity","viewMode","MOSAIC","EntitiesView","filteredEntities","getEntities","toUpperCase","suite","street","Title","SectionTitle","HeaderContainer","EntitiesHeader","changeViewMode","LIST","color","fullScreen","Entities","toggleFullScreenMode","getContent","NotFoundPageContainer","NotFoundPage","page404","SinglePublicationContainer","InfoContainer","SinglePublication","publication","lastUpdateDate","personImage","PublicationsContainer","Publications","latestPublications","WorkspaceImage","img","WorkspaceContainer","WorkspaceInfo","SingleEditableWorkspace","accessType","changeType","workspace","description","changeWorkspaceTitle","changeWorkspaceDescription","EntitiesFiltersDefinitions","ALL","DomainIcon","green","SAS","lightBlue","SARL","yellow","SECONDARY_BUSINESS","ForumIcon","COMMUNITIES","DescriptionIcon","POA","PeopleIcon","SURVEY","span","DotSeparator","WorkContainer","Content","Info","Workspace","WorkspaceIcon","WorkspaceDefinitionContainer","SingleWork","work","workspaceName","workspaceDefinition","showCompanyDetails","showWorkspaceDefinitionDetails","createElement","datesDifference","Date","getTime","daysCount","floor","getLastUpdateText","Filters","SectionHeaderWithFilterInput","ResumeYourWorkMain","FiltersView","FilterContainer","selected","WorkspaceLastUpdates","changeValue","workspacesFilters","includes","addOrRemoveWorkspaceFilter","resumeYourWorks","toLowerCase","tiles","AccountTreeIcon","DateRangeIcon","TilesContainer","SingleTile","TileBg","WorkspaceTiles","tile","fontSize","WorkspaceViewElement","SingleWorkspaceView","useParams","singleWorkspace","workspaces","privacy","settings","logout","defaultSection","home","publicationSection","dropdownSections","peoples","administration","corporate","groupNorms","LatestPublicationContainer","MainPublication","RestPublications","strong","LatestPublications","mainPublication","ResumeYourWorkContainer","ResumeYourWork","filterWorks","filteredWorks","getWorks","IconContainer","DateSpan","SingleWorkspace","usersCount","WorkspacesMain","WorkspacesContainer","Workspaces","MainSectionContent","RightSectionContainer","RightSection","exact","path","MainPageContent","MainPage","DropdownViewContainer","p","size","changeSelectedOption","DropdownArrow","DropdownButton","NavDropdown","changeOpen","currentDropdownOption","arrow","getButtonView","selectedOption","rounded","ButtonWithBadge","badgeContent","badgeColor","iconColor","buttonBackground","backgroundColor","borderRadius","Badge","NavElement","nav","FirstNavSection","EndNavSection","NavBar","logo","Input","homeIcon","SmsIcon","NotificationsActiveIcon","API_URL","IMAGES_API_URL","MainPageApi","getComments","a","axios","get","comments","data","getUsers","users","getLoggedUser","getPhotos","loggedUser","getPosts","userId","posts","limit","photos","download_url","getResumeYourWorks","comment","randomIndex","random","randomWorkspaceDefinitionIndex","contract","getWorkspaces","works","randomPhotoIndex","getLatestPublications","post","AdvancedAccountInfoApi","getProposals","randomUserIndex","split","getFees","getData","makeAutoObservable","observable","action","EntitiesApi","getTodos","todos","todo","EntitiesStore","definition","filterDefinitionIndex","findIndex","splice","getCondition","runInAction","MainPageStore","getYourWorks","filteredInputValue","filters","indexOf","RootStore","AppContainer","App","rootStore","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7def8f21.chunk.js","sourcesContent":["import React, {Component, CSSProperties, ReactElement} from \"react\";\nimport {Scrollbars} from \"react-custom-scrollbars\";\nimport {ReactHeight} from \"react-height\";\n\ninterface IProps {\n\tscrollHorizontallyOnWheel?: boolean;\n\tscrollHorizontallyMultiplier?: number;\n\tclassName?: string;\n\tstyle?: CSSProperties;\n\tautoHeight?: boolean;\n\tmaxHeight?: number | string;\n\tonHeightReady?: (height: number) => void;\n}\n\ninterface IState {\n\tisFocused: boolean;\n\tchildrenHeight: number;\n}\n\nclass CustomScrollbar extends Component<IProps, IState> {\n\tstate = {\n\t\tisFocused: false,\n\t\tchildrenHeight: 0,\n\t};\n\n\tprotected scrollbar: Scrollbars | null = null;\n\tprotected static defaultProps = {\n\t\tscrollHorizontallyOnWheel: false,\n\t\tscrollHorizontallyMultiplier: 5,\n\t\tclassName: \"\",\n\t\tautoHeight: true,\n\t\tmaxHeight: null,\n\t\tonHeightReady: (height: number) => height,\n\t\tstyle: {},\n\t};\n\n\tprotected onBodyWheel = (e: WheelEvent) => {\n\t\tif (this.state.isFocused) {\n\t\t\te.preventDefault();\n\t\t}\n\t};\n\n\tpublic componentDidMount() {\n\t\tdocument.body.addEventListener(\"wheel\", this.onBodyWheel, {passive: false});\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tdocument.body.removeEventListener(\"wheel\", this.onBodyWheel);\n\t}\n\n\tprotected onMouseOver = () => {\n\t\tif (this.props.scrollHorizontallyOnWheel) {\n\t\t\tthis.setState({isFocused: true});\n\t\t}\n\t};\n\tprotected onMouseLeave = () => {\n\t\tif (this.props.scrollHorizontallyOnWheel) {\n\t\t\tthis.setState({isFocused: false});\n\t\t}\n\t};\n\n\tprotected onWheel = (e: any) => {\n\t\tif (this.props.scrollHorizontallyOnWheel && this.scrollbar) {\n\t\t\tconst scrollHorizontallyMultiplier = this.props.scrollHorizontallyMultiplier || 3;\n\t\t\tconst scroll = this.scrollbar.getScrollLeft() + e.deltaY * scrollHorizontallyMultiplier;\n\n\t\t\tthis.scrollbar?.scrollLeft(scroll);\n\t\t}\n\t};\n\n\tprotected onHeightReady = (height: number) => {\n\t\tif (this.props.onHeightReady) this.props.onHeightReady(height);\n\t\tthis.setState({childrenHeight: height});\n\t};\n\n\tpublic render(): ReactElement {\n\t\tconst styles = {\n\t\t\theight: `${this.state.childrenHeight}px`,\n\t\t\tmaxHeight: `${this.props.maxHeight}${typeof this.props.maxHeight === \"string\" ? \"\" : \"px\"}`,\n\t\t\t...this.props.style,\n\t\t};\n\n\t\treturn (\n\t\t\t<Scrollbars\n\t\t\t\tclassName={this.props.className}\n\t\t\t\tref={(node) => (this.scrollbar = node)}\n\t\t\t\tonWheel={this.onWheel}\n\t\t\t\tstyle={styles}\n\t\t\t\tonMouseOver={this.onMouseOver}\n\t\t\t\tonMouseLeave={this.onMouseLeave}\n\t\t\t>\n\t\t\t\t<ReactHeight onHeightReady={this.onHeightReady}>{this.props.children}</ReactHeight>\n\t\t\t</Scrollbars>\n\t\t);\n\t}\n}\n\nexport default CustomScrollbar;\n","export enum SeparatorVariant {\n\tHORIZONTAL = \"horizontal\",\n\tVERTICAL = \"vertical\",\n}\n","export default __webpack_public_path__ + \"static/media/ecosystem.5212c0a0.svg\";","export default __webpack_public_path__ + \"static/media/entities2.2af4f48d.svg\";","export default __webpack_public_path__ + \"static/media/network.12f5db77.svg\";","export default __webpack_public_path__ + \"static/media/plus.7859c33f.svg\";","export default __webpack_public_path__ + \"static/media/publications.136157f9.svg\";","export default __webpack_public_path__ + \"static/media/user-plus.12f5db77.svg\";","import Button from \"@material-ui/core/Button\";\nimport React, {FC} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n\tlink: string;\n\ticon?: string;\n\ttext: string;\n\tonClick?: () => void;\n\tendAdornment?: JSX.Element;\n}\n\nconst Container = styled.div`\n\tbutton {\n\t\twidth: 100%;\n\t\tfont-size: 0.8em;\n\t\tfont-weight: 400;\n\n\t\ttext-transform: inherit;\n\n\t\tdisplay: flex;\n\t\tjustify-content: space-between !important;\n\t\talign-items: center !important;\n\n\t\timg {\n\t\t\theight: 15px;\n\t\t\tpadding: 0 10px;\n\t\t}\n\t}\n`;\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nexport const ButtonWithLink: FC<IProps> = ({link, icon, text, onClick, endAdornment}) => (\n\t<Container>\n\t\t<Link to={link}>\n\t\t\t<Button onClick={() => onClick?.()}>\n\t\t\t\t<Wrapper>\n\t\t\t\t\t{icon && <img src={icon} alt=\"icon edit\" />}\n\t\t\t\t\t<span>{text}</span>\n\t\t\t\t</Wrapper>\n\n\t\t\t\t{endAdornment}\n\t\t\t</Button>\n\t\t</Link>\n\t</Container>\n);\n","import React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {SeparatorVariant} from \"../consts/SeparatorVariant\";\n\ninterface IProps {\n\tvariant?: SeparatorVariant;\n}\n\nconst border = \"0.5px solid rgba(0, 0, 0, 0.2)\";\nconst Separator = styled.div<IProps>`\n\tborder-right: ${(props) => (props.variant === SeparatorVariant.VERTICAL ? border : \"none\")};\n\tborder-bottom: ${(props) => (props.variant === SeparatorVariant.VERTICAL ? \"none\" : border)};\n\twidth: ${(props) => (props.variant === SeparatorVariant.VERTICAL ? \"1px\" : \"100%\")};\n\theight: ${(props) => (props.variant === SeparatorVariant.VERTICAL ? \"100%\" : \"1px\")};\n\tmargin: ${(props) => (props.variant === SeparatorVariant.VERTICAL ? \"0 5px\" : \"5px 0\")};\n\topacity: 0.5;\n`;\n\nexport const SectionSeparator: FC<IProps> = ({variant}) => <Separator variant={variant} />;\n","export enum AccessType {\n\tREAD = \"read\",\n\tEDIT = \"edit\",\n}\n","import {Avatar, Paper} from \"@material-ui/core\";\nimport {inject, observer} from \"mobx-react\";\nimport React, {FC} from \"react\";\nimport ecosystem from \"../../assets/icons/ecosystem.svg\";\nimport entities from \"../../assets/icons/entities2.svg\";\nimport network from \"../../assets/icons/network.svg\";\nimport addNewPublication from \"../../assets/icons/plus.svg\";\n\nimport publications from \"../../assets/icons/publications.svg\";\n\nimport addNewPerson from \"../../assets/icons/user-plus.svg\";\nimport {ButtonWithLink} from \"../../common/ButtonWithLink\";\nimport {SectionSeparator} from \"../../common/SectionSeparator\";\nimport {DropdownOption} from \"../../interfaces/DropdownOption\";\nimport {MainPageStore} from \"../../stores/MainPageStore\";\nimport styled from \"styled-components\";\n\nconst options: DropdownOption[] = [\n\t{title: \"Publications\", icon: publications, link: \"/publications\"},\n\t{title: \"Ecosystem\", icon: ecosystem, link: \"/ecosystem\"},\n\t{title: \"Entities\", icon: entities, link: \"/entities\"},\n];\n\ninterface IProps {\n\tmainPageStore?: MainPageStore;\n}\n\nconst LeftSectionContainer = styled.div`\n\twidth: 250px;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding-top: 20px;\n\n\t.accountInfo {\n\t\twidth: 90%;\n\t\theight: auto;\n\t\tmin-height: 200px;\n\t}\n\n\tbutton {\n\t\twidth: 100%;\n\t}\n`;\n\nconst PaperButtons = styled.div`\n\tbutton {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-start;\n\n\t\tfont-size: 0.8em;\n\n\t\timg {\n\t\t\theight: 15px;\n\t\t\tmargin-right: 10px;\n\t\t}\n\n\t\tstrong {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\n\t\t\tpadding: 5px;\n\t\t\tborder: 0.5px solid rgba(135, 139, 145, 0.5);\n\n\t\t\timg {\n\t\t\t\tmax-width: 15px;\n\t\t\t\tmax-height: 15px;\n\t\t\t\tmargin-right: 0;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst NavOptions = styled.div`\n\twidth: 90%;\n\theight: auto;\n\tmargin-top: 20px;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\n\timg {\n\t\tmargin-right: 10px;\n\t}\n`;\n\nconst AccountSection = styled.section`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 10px;\n\tfont-size: 0.9em;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nconst AccountDetails = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\n\tstrong {\n\t\tcolor: #333333;\n\t}\n\n\tem {\n\t\tcolor: rgba(135, 139, 145, 0.5);\n\t\tfont-size: 0.8em;\n\t\tfont-style: normal;\n\t}\n`;\n\nexport const LeftSectionElement: FC<IProps> = ({mainPageStore}) => {\n\tif (!mainPageStore || !mainPageStore.currentLoggedUser) return null;\n\n\treturn (\n\t\t<LeftSectionContainer>\n\t\t\t<Paper className={\"accountInfo\"}>\n\t\t\t\t<AccountSection>\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\talt={mainPageStore.currentLoggedUser.name}\n\t\t\t\t\t\tsrc={mainPageStore.currentLoggedUser.photo.url}\n\t\t\t\t\t\tstyle={{width: 60, height: 60}}\n\t\t\t\t\t/>\n\t\t\t\t\t<AccountDetails>\n\t\t\t\t\t\t<strong>{mainPageStore.currentLoggedUser.name}</strong>\n\t\t\t\t\t\t<em>\n\t\t\t\t\t\t\t{mainPageStore.currentLoggedUser.username} - {mainPageStore.currentLoggedUser.company.name}\n\t\t\t\t\t\t</em>\n\t\t\t\t\t</AccountDetails>\n\t\t\t\t</AccountSection>\n\t\t\t\t<SectionSeparator />\n\n\t\t\t\t<PaperButtons>\n\t\t\t\t\t<ButtonWithLink\n\t\t\t\t\t\tlink={\"/add-new-network\"}\n\t\t\t\t\t\ttext={\"Your network\"}\n\t\t\t\t\t\ticon={network}\n\t\t\t\t\t\tendAdornment={\n\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t<img src={addNewPerson} alt={\"icon\"} />\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<ButtonWithLink\n\t\t\t\t\t\tlink={\"/add-new-publication\"}\n\t\t\t\t\t\ttext={\"Your publications\"}\n\t\t\t\t\t\ticon={publications}\n\t\t\t\t\t\tendAdornment={\n\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t<img src={addNewPublication} alt={\"icon\"} />\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</PaperButtons>\n\t\t\t</Paper>\n\n\t\t\t<NavOptions>\n\t\t\t\t{options?.map((option: DropdownOption) => (\n\t\t\t\t\t<ButtonWithLink\n\t\t\t\t\t\tkey={option.title}\n\t\t\t\t\t\tlink={option.link}\n\t\t\t\t\t\ticon={option.icon}\n\t\t\t\t\t\ttext={option.title}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tmainPageStore?.changeCurrentDropdownSection(option);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</NavOptions>\n\t\t</LeftSectionContainer>\n\t);\n};\n\nexport const LeftSection = inject(\"mainPageStore\")(observer(LeftSectionElement));\n","import {TextField} from \"@material-ui/core\";\nimport React, {ChangeEvent, FC, useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n\teditOnClick?: boolean;\n\tisEditable?: boolean;\n\ttext: string;\n\tmultiline?: boolean;\n\tonChange: (value: string) => void;\n}\n\nconst EditableTextContainer = styled.section`\n\tmargin-left: 20px;\n\n\tinput {\n\t\tfont-size: 0.8em;\n\t\theight: 0.7em;\n\t\tmargin-top: 1px;\n\t\tfont-weight: 300;\n\t}\n`;\nexport const EditableText: FC<IProps> = ({editOnClick, multiline, isEditable, text, onChange}) => {\n\tconst [isEditMode, changeMode] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tif (!editOnClick) changeMode(isEditable || false);\n\t}, [isEditable, editOnClick]);\n\n\tconst onElementClick = () => {\n\t\tif (editOnClick && isEditable) changeMode(!isEditMode);\n\t};\n\n\tconst onBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n\t\tif (editOnClick) {\n\t\t\tconst input = event.target as HTMLInputElement;\n\n\t\t\tonChange(input.value);\n\t\t\tchangeMode(!isEditMode);\n\t\t}\n\t};\n\n\treturn (\n\t\t<EditableTextContainer>\n\t\t\t{isEditMode ? (\n\t\t\t\t<TextField\n\t\t\t\t\tautoFocus\n\t\t\t\t\tdefaultValue={text}\n\t\t\t\t\tonChange={(e: ChangeEvent) => onChange((e.target as HTMLInputElement).value)}\n\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\tmultiline={multiline}\n\t\t\t\t\trowsMax={3}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<span onClick={onElementClick}>{text}</span>\n\t\t\t)}\n\t\t</EditableTextContainer>\n\t);\n};\n","export default __webpack_public_path__ + \"static/media/settings.e6768dc8.svg\";","export enum Condition {\n\tCONTAINS = \"Contains\",\n\tBETWEEN = \"Between\",\n\t// AND = \"And\",\n\tENDS_BEFORE = \"Ends before\",\n}\n","export enum FilterByProperty {\n\tCOMPANY = \"Company\",\n\tSTATUS = \"Status\",\n}\n","export enum LogicalOperation {\n\tWHERE = \"Where\",\n\tAND = \"And\",\n\tOR = \"Or\",\n}\n","import Button from \"@material-ui/core/Button\";\nimport React, {FC, useState} from \"react\";\nimport styled from \"styled-components\";\nimport iconEdit from \"../../assets/icons/settings.svg\";\nimport {AccessType} from \"../../consts/AccessType\";\n\ninterface IProps {\n\tchangeMode: (mode: AccessType) => void;\n}\n\nconst EditableSectionContainer = styled.div`\n\twidth: 100%;\n\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin-bottom: 20px;\n\tbox-sizing: border-box;\n\tpadding: 0 10px;\n\n\tbutton {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 10px;\n\t\tz-index: 10;\n\t}\n`;\n\nexport const AdvancedAccountInfoEditableSection: FC<IProps> = ({changeMode, children}) => {\n\tconst {READ, EDIT} = AccessType;\n\tconst [mode, changeLocalMode] = useState<AccessType>(AccessType.READ);\n\n\tconst clickOnEditButton = () => {\n\t\tconst newMode = mode === READ ? EDIT : READ;\n\n\t\tchangeMode(newMode);\n\t\tchangeLocalMode(newMode);\n\t};\n\n\treturn (\n\t\t<EditableSectionContainer>\n\t\t\t<Button onClick={clickOnEditButton}>\n\t\t\t\t<img src={iconEdit} alt=\"icon edit\" />\n\t\t\t</Button>\n\n\t\t\t{children}\n\t\t</EditableSectionContainer>\n\t);\n};\n","import {TextField} from \"@material-ui/core\";\nimport {blue} from \"@material-ui/core/colors\";\nimport React, {FC, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {EditableText} from \"../../common/EditableText\";\nimport {AccessType} from \"../../consts/AccessType\";\nimport {AdvancedAccountInfoEditableSection} from \"./AdvancedAccountInfoEditableSection\";\n\ninterface SkillsSection {\n\tsectionName: string;\n\telements: string[];\n}\n\nconst defaultSections: SkillsSection[] = [\n\t{\n\t\tsectionName: \"Expertise\",\n\t\telements: [\"Mergers and acquisition\"],\n\t},\n\t{\n\t\tsectionName: \"Specialties\",\n\t\telements: [\"Cross border operation\", \"Transaction over 500M$\"],\n\t},\n\t{\n\t\tsectionName: \"Admission to practice law\",\n\t\telements: [\"Paris bar association\", \"Tunisian bar association\"],\n\t},\n\t{\n\t\tsectionName: \"Countries\",\n\t\telements: [\"Tunisia\"],\n\t},\n];\n\nconst AccountSkillsContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 20px 0;\n`;\n\nconst AccountSkills = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 5px 0;\n\n\tem {\n\t\tfont-size: 0.9em;\n\t\tmargin-top: 2px;\n\t\tmargin-left: 20px;\n\t\tfont-weight: 300;\n\t\tfont-style: normal;\n\t\tmargin-bottom: 10px;\n\t}\n`;\n\nconst SkillsContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\n\tdiv {\n\t\t//margin-top: 10px;\n\t}\n\n\tspan {\n\t\tfont-size: 0.9em;\n\t\tfont-weight: 300;\n\t\tcolor: ${blue[\"700\"]};\n\t\tbackground-color: ${blue[\"50\"]};\n\t\tpadding: 2px 10px;\n\t\tmargin-left: 0;\n\t\tborder-radius: 5px;\n\t}\n\n\tinput {\n\t\tfont-size: 0.8em;\n\t\theight: 0.7em;\n\t\tmargin-top: 1px;\n\t\tfont-weight: 300;\n\t}\n\n\t.MuiFormControl-root {\n\t\tmargin-left: 10px;\n\t}\n`;\n\nexport const AccountSkillsElement: FC = () => {\n\tconst {EDIT} = AccessType;\n\tconst [mode, changeMode] = useState<AccessType>(AccessType.READ);\n\tconst [sections, changeSections] = useState<SkillsSection[]>(defaultSections);\n\n\tconst addNewElement = (event: React.FocusEvent<HTMLInputElement>, sectionName: string) => {\n\t\tconst input = event.target as HTMLInputElement;\n\t\tconst inputValue = input.value;\n\t\tif (inputValue.length) {\n\t\t\tconst allSections = [...sections];\n\t\t\tconst currentSection = allSections.find((section) => section.sectionName === sectionName);\n\n\t\t\tcurrentSection?.elements.push(inputValue);\n\t\t\tinput.value = \"\";\n\t\t\tchangeSections(allSections);\n\t\t}\n\t};\n\n\tconst onSkillEdit = (value: string, sectionName: string, index: number) => {\n\t\tconst allSections = [...sections];\n\t\tconst currentSection = allSections.find((section) => section.sectionName === sectionName);\n\n\t\tif (currentSection) currentSection.elements[index] = value;\n\t\tchangeSections(allSections);\n\t};\n\n\treturn (\n\t\t<AdvancedAccountInfoEditableSection changeMode={changeMode}>\n\t\t\t<AccountSkillsContainer>\n\t\t\t\t{sections.map((section: SkillsSection) => (\n\t\t\t\t\t<AccountSkills>\n\t\t\t\t\t\t<em>{section.sectionName}</em>\n\t\t\t\t\t\t<SkillsContainer>\n\t\t\t\t\t\t\t{section.elements.map((skill: string, index: number) => (\n\t\t\t\t\t\t\t\t<EditableText\n\t\t\t\t\t\t\t\t\teditOnClick={true}\n\t\t\t\t\t\t\t\t\tisEditable={mode === EDIT}\n\t\t\t\t\t\t\t\t\ttext={skill}\n\t\t\t\t\t\t\t\t\tonChange={(value: string) => onSkillEdit(value, section.sectionName, index)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{mode === EDIT ? (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tplaceholder={\"New element\"}\n\t\t\t\t\t\t\t\t\tonBlur={(e: React.FocusEvent<HTMLInputElement>) =>\n\t\t\t\t\t\t\t\t\t\taddNewElement(e, section.sectionName)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</SkillsContainer>\n\t\t\t\t\t</AccountSkills>\n\t\t\t\t))}\n\t\t\t</AccountSkillsContainer>\n\t\t</AdvancedAccountInfoEditableSection>\n\t);\n};\n","import {Avatar} from \"@material-ui/core\";\nimport {blue} from \"@material-ui/core/colors\";\nimport React, {FC, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {EditableText} from \"../../common/EditableText\";\nimport {AccessType} from \"../../consts/AccessType\";\nimport {User} from \"../../interfaces/User\";\nimport {AdvancedAccountInfoEditableSection} from \"./AdvancedAccountInfoEditableSection\";\n\ninterface IProps {\n\tuser: User;\n}\n\nconst AdvancedAccountInfoContainer = styled.div`\n\twidth: 100%;\n\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin-bottom: 20px;\n\tbox-sizing: border-box;\n\tpadding: 0 10px;\n\n\tbutton {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 10px;\n\t}\n`;\n\nconst AvatarContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\n\ta {\n\t\tcolor: ${blue[\"300\"]} !important;\n\t\tfont-size: 12px;\n\t\tcursor: pointer;\n\t\tmargin-top: 10px;\n\t}\n`;\n\nconst AccountInfo = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tspan {\n\t\tfont-size: 0.85em;\n\t\tmargin-top: 2px;\n\t\tmargin-left: 20px;\n\t\tfont-weight: 300;\n\t}\n`;\n\nconst AdditionalInfo = styled(AccountInfo)`\n\tmargin-left: 50px;\n\talign-items: flex-end;\n\talign-self: flex-end;\n`;\n\nexport const AdvancedAccountInfo: FC<IProps> = ({user}) => {\n\tconst {EDIT} = AccessType;\n\tconst [mode, changeMode] = useState<AccessType>(AccessType.READ);\n\n\treturn (\n\t\t<AdvancedAccountInfoEditableSection changeMode={changeMode}>\n\t\t\t<AdvancedAccountInfoContainer>\n\t\t\t\t<AvatarContainer>\n\t\t\t\t\t<Avatar alt={user.name} src={user.photo.url} style={{width: 50, height: 50}} />\n\t\t\t\t\t<Link to={\"/account\"}>See profile</Link>\n\t\t\t\t</AvatarContainer>\n\n\t\t\t\t<AccountInfo>\n\t\t\t\t\t<EditableText\n\t\t\t\t\t\tisEditable={mode === EDIT}\n\t\t\t\t\t\ttext={user.name}\n\t\t\t\t\t\tonChange={(value) => (user.name = value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<EditableText\n\t\t\t\t\t\tisEditable={mode === EDIT}\n\t\t\t\t\t\ttext={user.company.name}\n\t\t\t\t\t\tonChange={(value) => (user.company.name = value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<EditableText\n\t\t\t\t\t\tisEditable={mode === EDIT}\n\t\t\t\t\t\ttext={user.address.city}\n\t\t\t\t\t\tonChange={(value) => (user.address.city = value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<EditableText\n\t\t\t\t\t\tisEditable={mode === EDIT}\n\t\t\t\t\t\ttext={user.company.role}\n\t\t\t\t\t\tonChange={(value) => (user.company.role = value)}\n\t\t\t\t\t/>\n\t\t\t\t</AccountInfo>\n\n\t\t\t\t<AdditionalInfo>\n\t\t\t\t\t<EditableText\n\t\t\t\t\t\tisEditable={mode === EDIT}\n\t\t\t\t\t\ttext={user.email}\n\t\t\t\t\t\tonChange={(value) => (user.email = value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<EditableText\n\t\t\t\t\t\tisEditable={mode === EDIT}\n\t\t\t\t\t\ttext={user.phone}\n\t\t\t\t\t\tonChange={(value) => (user.phone = value)}\n\t\t\t\t\t/>\n\t\t\t\t</AdditionalInfo>\n\t\t\t</AdvancedAccountInfoContainer>\n\t\t</AdvancedAccountInfoEditableSection>\n\t);\n};\n","import {blue} from \"@material-ui/core/colors\";\nimport styled from \"styled-components\";\n\nexport const SingleAdvancedAccountInfoElement = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 20px 0;\n\n\tstrong {\n\t\tfont-weight: 400;\n\t\tmargin-bottom: 10px;\n\t}\n\n\ta {\n\t\tmargin-top: 10px;\n\t\ttext-align: right;\n\t\tcolor: ${blue[\"300\"]} !important;\n\t\tfont-weight: 300;\n\t}\n\n\tspan {\n\t\tfont-size: 0.9em;\n\t\tmargin-top: 2px;\n\t\tmargin-left: 20px;\n\t\tfont-weight: 300;\n\t}\n`;\n","import Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport {inject, observer} from \"mobx-react\";\nimport React, {FC} from \"react\";\nimport {Fee} from \"../../interfaces/Fee\";\nimport {AdvancedAccountInfo} from \"../../stores/AdvancedAccountInfo\";\nimport {SingleAdvancedAccountInfoElement} from \"./SingleAdvancedAccountInfoElement\";\n\ninterface IProps {\n\tadvancedAccountInfo?: AdvancedAccountInfo;\n}\n\nexport const AmountOfFeesElement: FC<IProps> = ({advancedAccountInfo}) => {\n\tif (!advancedAccountInfo || !advancedAccountInfo.fees) return null;\n\n\treturn (\n\t\t<SingleAdvancedAccountInfoElement>\n\t\t\t<strong>Amount of fees</strong>\n\n\t\t\t<TableContainer component={Paper}>\n\t\t\t\t<Table aria-label=\"caption table\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>Year</TableCell>\n\t\t\t\t\t\t\t<TableCell>Cost center</TableCell>\n\t\t\t\t\t\t\t<TableCell>Total amount</TableCell>\n\t\t\t\t\t\t\t<TableCell>Law firm</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{advancedAccountInfo.fees.map((row: Fee) => (\n\t\t\t\t\t\t\t<TableRow key={row.id}>\n\t\t\t\t\t\t\t\t<TableCell>{row.year}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>CS {row.costCenter}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{row.totalAmount} $</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{row.lawFirm}</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t</SingleAdvancedAccountInfoElement>\n\t);\n};\n\nexport const AmountOfFees = inject(\"advancedAccountInfo\")(observer(AmountOfFeesElement));\n","import Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport {inject, observer} from \"mobx-react\";\nimport React, {FC} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Proposal} from \"../../interfaces/Proposal\";\nimport {AdvancedAccountInfo} from \"../../stores/AdvancedAccountInfo\";\nimport {SingleAdvancedAccountInfoElement} from \"./SingleAdvancedAccountInfoElement\";\n\ninterface IProps {\n\tadvancedAccountInfo?: AdvancedAccountInfo;\n}\n\nexport const InternalReviewsElement: FC<IProps> = ({advancedAccountInfo}) => {\n\tif (!advancedAccountInfo || !advancedAccountInfo.proposals) return null;\n\n\tconst reviews = advancedAccountInfo.proposals.slice(0, 5);\n\treturn (\n\t\t<SingleAdvancedAccountInfoElement>\n\t\t\t<strong>Internal reviews</strong>\n\n\t\t\t<TableContainer component={Paper}>\n\t\t\t\t<Table aria-label=\"caption table\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>Name</TableCell>\n\t\t\t\t\t\t\t<TableCell>Entity</TableCell>\n\t\t\t\t\t\t\t<TableCell>Location</TableCell>\n\t\t\t\t\t\t\t<TableCell>Expertise</TableCell>\n\t\t\t\t\t\t\t<TableCell>Date</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{reviews.map((row: Proposal) => (\n\t\t\t\t\t\t\t<TableRow key={row.name}>\n\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t{row.name.slice(0, 15)} {row.name.length > 15 ? \"...\" : \"\"}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{row.entity}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{row.city}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{row.expertise}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{row.date.toDateString()}</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\n\t\t\t<Link to={\"/reviews\"}>See more reviews</Link>\n\t\t</SingleAdvancedAccountInfoElement>\n\t);\n};\n\nexport const InternalReviews = inject(\"advancedAccountInfo\")(observer(InternalReviewsElement));\n","export default __webpack_public_path__ + \"static/media/document.a0969761.svg\";","import {grey} from \"@material-ui/core/colors\";\nimport React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport file from \"../assets/icons/document.svg\";\n\ninterface IProps {\n\tname?: string;\n}\n\nconst AttachmentContainer = styled.div`\n\twidth: 100%;\n\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin: 5px 0;\n\tpadding: 5px 10px;\n\tbackground-color: ${grey[\"100\"]};\n\tbox-sizing: border-box;\n\n\tfont-size: 0.9em;\n\tfont-weight: 300;\n\n\timg {\n\t\twidth: 15px;\n\t\tmargin-right: 10px;\n\t}\n`;\n\nexport const Attachment: FC<IProps> = ({name}) => (\n\t<AttachmentContainer>\n\t\t<img src={file} alt=\"file icon\" />\n\t\t{name || \"Attachment.file\"}\n\t</AttachmentContainer>\n);\n","import {grey} from \"@material-ui/core/colors\";\nimport React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {Attachment} from \"../../common/Attachment\";\nimport {SingleAdvancedAccountInfoElement} from \"./SingleAdvancedAccountInfoElement\";\n\ninterface IProps {}\n\nconst PanelInformation = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 5px 0;\n\n\tstrong {\n\t\tfont-weight: 300;\n\t\tcolor: ${grey[\"600\"]};\n\t\tmargin-bottom: 5px;\n\t\tfont-size: 0.9em;\n\t}\n\n\tspan {\n\t\tfont-size: 0.9em;\n\t\tmargin-top: 2px;\n\t\tmargin-left: 20px;\n\t\tfont-weight: 300;\n\t}\n`;\n\nexport const PanelInformations: FC<IProps> = () => {\n\treturn (\n\t\t<SingleAdvancedAccountInfoElement>\n\t\t\t<strong>Panel Information</strong>\n\t\t\t<PanelInformation>\n\t\t\t\t<strong>Hourly free</strong>\n\t\t\t\t<span>610$/hour (Negotiated)</span>\n\t\t\t</PanelInformation>\n\n\t\t\t<PanelInformation>\n\t\t\t\t<strong>Terms & conditions</strong>\n\t\t\t\t<span>Monthly 10K$ retainer - see with Jenny Smith</span>\n\t\t\t\t<Attachment name={\"Attachment_lorem-ipsum25232422.jpg\"} />\n\t\t\t</PanelInformation>\n\t\t</SingleAdvancedAccountInfoElement>\n\t);\n};\n","import Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport {inject, observer} from \"mobx-react\";\nimport React, {FC} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Proposal} from \"../../interfaces/Proposal\";\nimport {AdvancedAccountInfo} from \"../../stores/AdvancedAccountInfo\";\nimport {SingleAdvancedAccountInfoElement} from \"./SingleAdvancedAccountInfoElement\";\n\ninterface IProps {\n\tadvancedAccountInfo?: AdvancedAccountInfo;\n}\n\nexport const ProposalsElement: FC<IProps> = ({advancedAccountInfo}) => {\n\tif (!advancedAccountInfo || !advancedAccountInfo.proposals) return null;\n\n\tconst proposals = advancedAccountInfo.proposals.slice(0, 5);\n\treturn (\n\t\t<SingleAdvancedAccountInfoElement>\n\t\t\t<strong>Proposals</strong>\n\n\t\t\t<TableContainer component={Paper}>\n\t\t\t\t<Table aria-label=\"caption table\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>Name</TableCell>\n\t\t\t\t\t\t\t<TableCell>Entity</TableCell>\n\t\t\t\t\t\t\t<TableCell>Location</TableCell>\n\t\t\t\t\t\t\t<TableCell>Expertise</TableCell>\n\t\t\t\t\t\t\t<TableCell>Date</TableCell>\n\t\t\t\t\t\t\t<TableCell>Firm</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{proposals.map((row: Proposal) => (\n\t\t\t\t\t\t\t<TableRow key={row.name}>\n\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t{row.name.slice(0, 15)} {row.name.length > 15 ? \"...\" : \"\"}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{row.entity}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{row.city}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{row.expertise}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{row.date.toDateString()}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{row.company}</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\n\t\t\t<Link to={\"/proposals\"}>See more proposals</Link>\n\t\t</SingleAdvancedAccountInfoElement>\n\t);\n};\n\nexport const Proposals = inject(\"advancedAccountInfo\")(observer(ProposalsElement));\n","export default __webpack_public_path__ + \"static/media/comments.51cb49a8.svg\";","export default __webpack_public_path__ + \"static/media/people.82eb6230.svg\";","import {Avatar} from \"@material-ui/core\";\nimport {grey} from \"@material-ui/core/colors\";\nimport React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport message from \"../assets/icons/comments.svg\";\nimport profile from \"../assets/icons/people.svg\";\nimport {User} from \"../interfaces/User\";\nimport {ButtonWithLink} from \"./ButtonWithLink\";\n\ninterface IProps {\n\tuser: User;\n}\n\nconst InternalCorrespondentContainer = styled.div`\n\twidth: 100%;\n\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-between;\n\talign-items: center;\n\n\tmargin: 5px 0;\n\tpadding: 5px 10px;\n\tbackground-color: ${grey[\"100\"]};\n\tbox-sizing: border-box;\n\n\tfont-size: 0.9em;\n\tfont-weight: 300;\n\n\tsection {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t}\n\n\tstrong {\n\t\tmargin: 0 10px !important;\n\t}\n\n\ta {\n\t\tmargin-top: 0;\n\t}\n\n\tbutton {\n\t\twidth: 110px;\n\t\tdisplay: flex;\n\t\tjustify-content: space-around;\n\n\t\tspan {\n\t\t\tmargin-left: 0;\n\t\t}\n\t}\n`;\n\nexport const InternalCorrespondent: FC<IProps> = ({user}) => (\n\t<InternalCorrespondentContainer>\n\t\t<section>\n\t\t\t<Avatar alt={user.name} src={user.photo.url} style={{width: 25, height: 25}} />\n\t\t\t<strong>{user.name}</strong>\n\t\t</section>\n\t\t<section>\n\t\t\t<ButtonWithLink link={\"/message\"} icon={message} text={\"Message\"} />\n\t\t\t<ButtonWithLink link={\"/profile\"} icon={profile} text={\"Profile\"} />\n\t\t</section>\n\t</InternalCorrespondentContainer>\n);\n","import {inject, observer} from \"mobx-react\";\nimport React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {InternalCorrespondent} from \"../../common/InternalCorrespondent\";\nimport {MainPageStore} from \"../../stores/MainPageStore\";\nimport {SingleAdvancedAccountInfoElement} from \"./SingleAdvancedAccountInfoElement\";\n\ninterface IProps {\n\tmainPageStore?: MainPageStore;\n}\n\nconst InternalCorrespondents = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 20px 0 10px 0;\n\n\tspan {\n\t\tfont-size: 0.9em;\n\t\tmargin-top: 2px;\n\t\tmargin-left: 20px;\n\t\tfont-weight: 300;\n\t}\n`;\n\nexport const ServicesAndProjectsElement: FC<IProps> = ({mainPageStore}) => {\n\tif (!mainPageStore || !mainPageStore.currentLoggedUser) return null;\n\n\treturn (\n\t\t<SingleAdvancedAccountInfoElement>\n\t\t\t<strong>Services & projects</strong>\n\t\t\t<span>Corporate M&A and international acquisitions</span>\n\n\t\t\t<InternalCorrespondents>\n\t\t\t\t<strong>Services & projects</strong>\n\t\t\t\t<InternalCorrespondent user={mainPageStore.currentLoggedUser} />\n\t\t\t\t<InternalCorrespondent user={mainPageStore.currentLoggedUser} />\n\t\t\t</InternalCorrespondents>\n\t\t</SingleAdvancedAccountInfoElement>\n\t);\n};\n\nexport const ServicesAndProjects = inject(\"mainPageStore\")(observer(ServicesAndProjectsElement));\n","import React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport message from \"../../assets/icons/comments.svg\";\nimport document from \"../../assets/icons/ecosystem.svg\";\nimport iconEdit from \"../../assets/icons/settings.svg\";\nimport {ButtonWithLink} from \"../../common/ButtonWithLink\";\n\ninterface IProps {}\n\nconst TopButtonsContainer = styled.div`\n\twidth: 100%;\n\theight: 100px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-end;\n\tmargin-bottom: 20px;\n\tpadding: 0 10px;\n\tbox-sizing: border-box;\n\n\tbutton {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\n\t\timg {\n\t\t\twidth: 18px;\n\t\t}\n\n\t\tspan {\n\t\t\tfont-size: 0.9em;\n\t\t\tmargin-left: 10px;\n\t\t\tborder-radius: 5px;\n\t\t}\n\t}\n`;\n\nexport const TopButtons: FC<IProps> = () => (\n\t<TopButtonsContainer>\n\t\t<ButtonWithLink link={\"/404\"} icon={message} text={\"Message\"} />\n\t\t<ButtonWithLink link={\"/404\"} icon={document} text={\"Create a request\"} />\n\t\t<ButtonWithLink link={\"/404\"} icon={iconEdit} text={\"Add to cluster\"} />\n\t</TopButtonsContainer>\n);\n","import {inject, observer} from \"mobx-react\";\nimport React, {FC} from \"react\";\nimport {SectionSeparator} from \"../common/SectionSeparator\";\nimport {AccountSkillsElement} from \"../components/advancedAccountInfo/AccountSkillsElement\";\nimport {AdvancedAccountInfo} from \"../components/advancedAccountInfo/AdvancedAccountInfo\";\nimport {AmountOfFees} from \"../components/advancedAccountInfo/AmountOfFees\";\nimport {InternalReviews} from \"../components/advancedAccountInfo/InternalReviews\";\nimport {PanelInformations} from \"../components/advancedAccountInfo/PanelInformations\";\nimport {Proposals} from \"../components/advancedAccountInfo/Proposals\";\nimport {ServicesAndProjects} from \"../components/advancedAccountInfo/ServicesAndProjects\";\nimport {TopButtons} from \"../components/advancedAccountInfo/TopButtons\";\nimport {MainPageStore} from \"../stores/MainPageStore\";\n\ninterface IProps {\n\tmainPageStore?: MainPageStore;\n}\n\nexport const AdvancedAccountInfoElement: FC<IProps> = ({mainPageStore}) => {\n\tif (!mainPageStore || !mainPageStore.currentLoggedUser) return null;\n\n\treturn (\n\t\t<>\n\t\t\t<TopButtons />\n\t\t\t<AdvancedAccountInfo user={mainPageStore.currentLoggedUser} />\n\t\t\t<SectionSeparator />\n\n\t\t\t<AccountSkillsElement />\n\t\t\t<SectionSeparator />\n\n\t\t\t<PanelInformations />\n\t\t\t<ServicesAndProjects />\n\t\t\t<SectionSeparator />\n\n\t\t\t<Proposals />\n\t\t\t<SectionSeparator />\n\n\t\t\t<InternalReviews />\n\t\t\t<SectionSeparator />\n\n\t\t\t<AmountOfFees />\n\t\t</>\n\t);\n};\n\nexport const AdvancedAccountInfoPage = inject(\"mainPageStore\")(observer(AdvancedAccountInfoElement));\n","export const white = \" #fff\";\nexport const defaultBoxShadow = \"0px 8px 11px -10px rgba(0, 0, 0, 0.75)\";\n","import {ClickAwayListener} from \"@material-ui/core\";\nimport React, {FC, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {defaultBoxShadow} from \"../assets/variables\";\n\ninterface IProps {\n\tbuttonView: React.ReactElement;\n\ttoggleDropdown?: (isOpen: boolean) => void;\n}\n\nconst DropdownContainerView = styled.div`\n\tposition: relative;\n\tmargin-left: 40px;\n\t-webkit-touch-callout: none;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n`;\n\nconst DropdownView = styled.div`\n\tbackground-color: white;\n\tbox-shadow: ${defaultBoxShadow};\n\tbox-sizing: border-box;\n\n\tposition: absolute;\n\ttop: 100%;\n\twidth: auto;\n\theight: auto;\n\tz-index: 1000;\n\n\t-webkit-overflow-scrolling: touch;\n`;\n\nexport const DropdownContainer: FC<IProps> = (props) => {\n\tconst [isOpen, toggleDropdown] = useState(false);\n\n\tconst onOutsideClick = () => {\n\t\tif (isOpen) {\n\t\t\tprops.toggleDropdown?.(false);\n\t\t\ttoggleDropdown(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<ClickAwayListener mouseEvent={\"onMouseDown\"} onClickAway={onOutsideClick}>\n\t\t\t<DropdownContainerView>\n\t\t\t\t{React.cloneElement(props.buttonView, {\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\ttoggleDropdown(!isOpen);\n\t\t\t\t\t\tprops.toggleDropdown?.(isOpen);\n\t\t\t\t\t},\n\t\t\t\t})}\n\t\t\t\t{isOpen && <DropdownView>{props.children}</DropdownView>}\n\t\t\t</DropdownContainerView>\n\t\t</ClickAwayListener>\n\t);\n};\n","export enum ViewMode {\n\tMOSAIC = \"mosaic\",\n\tLIST = \"list\",\n}\n","import {Button, MenuItem, Select, TextField} from \"@material-ui/core\";\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\nimport {inject, observer} from \"mobx-react\";\nimport React, {FC, ReactElement} from \"react\";\nimport styled from \"styled-components\";\nimport {Condition} from \"../../consts/Condition\";\nimport {FilterByProperty} from \"../../consts/FilterByProperty\";\nimport {LogicalOperation} from \"../../consts/LogicalOperation\";\nimport {FilterDefinition} from \"../../interfaces/FilterDefinition\";\nimport {EntitiesStore} from \"../../stores/EntitiesStore\";\n\ninterface IProps {\n\tentitiesStore?: EntitiesStore;\n\tfilterDefinition: FilterDefinition;\n\tgetMenuItems: <T>(values: Object, changeFn: (name: T) => void) => ReactElement[];\n}\n\nconst SingleFilterContainer = styled.div`\n\tdisplay: flex;\n\talign-items: end;\n`;\n\nexport const SingleFilterDefinitionView: FC<IProps> = ({entitiesStore, filterDefinition, getMenuItems}) => {\n\tif (!entitiesStore) return null;\n\n\tconst changeText = (e: React.ChangeEvent<HTMLInputElement>, conditionName?: string) => {\n\t\tconst name = conditionName || filterDefinition.condition.conditionName;\n\n\t\tentitiesStore?.changeFilterDefinitionInputValue(filterDefinition.id, name, e.target.value);\n\t};\n\n\treturn (\n\t\t<SingleFilterContainer>\n\t\t\t<Button onClick={() => entitiesStore?.removeFilterDefinition(filterDefinition.id)}>\n\t\t\t\t<CloseRoundedIcon />\n\t\t\t</Button>\n\t\t\t<Select value={filterDefinition.logicalOperation} defaultValue={LogicalOperation.WHERE}>\n\t\t\t\t{getMenuItems<LogicalOperation>(LogicalOperation, (name: LogicalOperation) =>\n\t\t\t\t\tentitiesStore?.changeLogicalOperation(filterDefinition.id, name)\n\t\t\t\t)}\n\t\t\t</Select>\n\n\t\t\t<Select value={filterDefinition.filterByProperty} defaultValue={FilterByProperty.COMPANY}>\n\t\t\t\t{getMenuItems<FilterByProperty>(FilterByProperty, (name: FilterByProperty) =>\n\t\t\t\t\tentitiesStore?.changeFilterByProperty(filterDefinition.id, name)\n\t\t\t\t)}\n\t\t\t</Select>\n\n\t\t\t<Select value={filterDefinition.condition.conditionName} defaultValue={Condition.CONTAINS}>\n\t\t\t\t{getMenuItems<Condition>(Condition, (name: Condition) =>\n\t\t\t\t\tentitiesStore?.changeCondition(filterDefinition.id, name)\n\t\t\t\t)}\n\t\t\t</Select>\n\t\t\t<TextField\n\t\t\t\tplaceholder={\"text\"}\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tonChange={changeText}\n\t\t\t\tvalue={filterDefinition.condition.conditionValue[filterDefinition.condition.conditionName]}\n\t\t\t/>\n\n\t\t\t{filterDefinition.condition.conditionName === Condition.ENDS_BEFORE ? (\n\t\t\t\t<>\n\t\t\t\t\t<Select value={\"And\"}>\n\t\t\t\t\t\t<MenuItem key={\"And\"} value={\"And\"}>\n\t\t\t\t\t\t\t{\"And\"}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tplaceholder={\"text\"}\n\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) => changeText(e, \"In\")}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) : null}\n\t\t</SingleFilterContainer>\n\t);\n};\n\nexport const SingleFilterDefinition = inject(\"entitiesStore\")(observer(SingleFilterDefinitionView));\n","import {Button, MenuItem, Select} from \"@material-ui/core\";\nimport {grey} from \"@material-ui/core/colors\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport {inject, observer} from \"mobx-react\";\nimport React, {FC, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {defaultBoxShadow} from \"../../assets/variables\";\nimport {Condition} from \"../../consts/Condition\";\nimport {FilterByProperty} from \"../../consts/FilterByProperty\";\nimport {LogicalOperation} from \"../../consts/LogicalOperation\";\nimport {FilterDefinition} from \"../../interfaces/FilterDefinition\";\nimport {EntitiesStore} from \"../../stores/EntitiesStore\";\nimport {SingleFilterDefinition} from \"./SingleFilterDefinition\";\n\ninterface IProps {\n\tentitiesStore?: EntitiesStore;\n}\n\nconst AdvancedFiltersContainer = styled.div`\n\twidth: 600px;\n\tmin-height: 200px;\n\tpadding: 20px;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tbackground-color: white;\n\tbox-shadow: ${defaultBoxShadow};\n\n\tstrong {\n\t\tfont-weight: inherit;\n\t\tfont-size: 0.8em;\n\t\tcolor: ${grey[\"600\"]};\n\t}\n\n\t.MuiFilledInput-input {\n\t\tpadding: 5px;\n\t\twidth: 60px;\n\t\tfont-size: 0.8em;\n\t}\n\n\t.MuiSelect-select.MuiSelect-select,\n\t.MuiMenuItem-root {\n\t\tfont-size: 0.8em;\n\t}\n\n\t.MuiMenu-paper {\n\t\tmargin-top: 36px;\n\t}\n\n\t.MuiList-padding {\n\t\tpadding: 0;\n\t}\n\n\t.MuiInput-root,\n\t.MuiFormControl-root {\n\t\tmargin-right: 10px;\n\t}\n\n\t.MuiButton-root {\n\t\tmin-width: unset;\n\t\tmargin-right: 10px;\n\t}\n`;\n\nconst AdvancedFilters: FC<IProps> = ({entitiesStore}) => {\n\tconst [logicalOperator, changeOperator] = useState<LogicalOperation>(LogicalOperation.WHERE);\n\n\tif (!entitiesStore || !entitiesStore.filterDefinitions) return null;\n\n\tfunction getMenuItems<T>(values: Object, changeFn: (name: T) => void): React.ReactElement[] {\n\t\treturn Object.values(values).map((name) => {\n\t\t\treturn (\n\t\t\t\t<MenuItem onClick={() => changeFn(name)} key={name} value={name}>\n\t\t\t\t\t{name}\n\t\t\t\t</MenuItem>\n\t\t\t);\n\t\t});\n\t}\n\n\treturn (\n\t\t<AdvancedFiltersContainer>\n\t\t\t<strong>Rows are filtered by the following conditions starting from the top</strong>\n\t\t\t{entitiesStore.filterDefinitions.map((filter: FilterDefinition) => {\n\t\t\t\treturn <SingleFilterDefinition key={filter.id} filterDefinition={filter} getMenuItems={getMenuItems} />;\n\t\t\t})}\n\n\t\t\t<div>\n\t\t\t\t<Select value={logicalOperator} defaultValue={LogicalOperation.WHERE}>\n\t\t\t\t\t{getMenuItems<LogicalOperation>(LogicalOperation, changeOperator)}\n\t\t\t\t</Select>\n\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tentitiesStore?.addNewFilterDefinition({\n\t\t\t\t\t\t\tid: entitiesStore?.nextFilterId,\n\t\t\t\t\t\t\tlogicalOperation: logicalOperator,\n\t\t\t\t\t\t\tfilterByProperty: FilterByProperty.COMPANY,\n\t\t\t\t\t\t\tcondition: {\n\t\t\t\t\t\t\t\tconditionName: Condition.CONTAINS,\n\t\t\t\t\t\t\t\tconditionValue: {\n\t\t\t\t\t\t\t\t\t[Condition.CONTAINS]: \"\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<AddRoundedIcon /> Add new filter\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</AdvancedFiltersContainer>\n\t);\n};\n\nexport const AdvancedFiltersView = inject(\"entitiesStore\")(observer(AdvancedFilters));\n","import {Button} from \"@material-ui/core\";\nimport {grey} from \"@material-ui/core/colors\";\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\nimport FiberManualRecordOutlinedIcon from \"@material-ui/icons/FiberManualRecordOutlined\";\nimport FilterListRoundedIcon from \"@material-ui/icons/FilterListRounded\";\nimport ImportExportRoundedIcon from \"@material-ui/icons/ImportExportRounded\";\nimport MoreHorizOutlinedIcon from \"@material-ui/icons/MoreHorizOutlined\";\nimport ShareRoundedIcon from \"@material-ui/icons/ShareRounded\";\nimport React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {DropdownContainer} from \"../../common/DropdownContainer\";\nimport {SectionSeparator} from \"../../common/SectionSeparator\";\nimport {SeparatorVariant} from \"../../consts/SeparatorVariant\";\nimport {AdvancedFiltersView} from \"./AdvancedFiltersView\";\nimport UnfoldMoreRoundedIcon from \"@material-ui/icons/UnfoldMoreRounded\";\nimport UnfoldLessRoundedIcon from \"@material-ui/icons/UnfoldLessRounded\";\n\ninterface IProps {\n\tchangeFullScreen: () => void;\n\tfullScreenMode: boolean;\n}\n\nexport const EntitiesFiltersSectionView = styled.div`\n\tdisplay: flex;\n\n\tbutton {\n\t\tpadding: 5px;\n\t\tfont-weight: 300;\n\t\tfont-size: 0.75em;\n\t\ttransition: 0.3s;\n\n\t\tsvg {\n\t\t\tmargin: 0 2.5px;\n\t\t\tfill: ${grey[\"700\"]};\n\t\t\ttransition: 0.3s;\n\t\t}\n\n\t\t&:hover {\n\t\t\tsvg {\n\t\t\t\ttransition: 0.3s;\n\t\t\t\tfill: black;\n\t\t\t}\n\t\t}\n\t}\n\n\t.expandButton {\n\t\tsvg {\n\t\t\ttransform: rotate(-45deg);\n\t\t}\n\t}\n`;\n\nexport const FirstFiltersSection: FC<IProps> = ({changeFullScreen, fullScreenMode}) => {\n\tconst getButtonView = () => {\n\t\treturn (\n\t\t\t<Button>\n\t\t\t\t<FilterListRoundedIcon /> Filters\n\t\t\t</Button>\n\t\t);\n\t};\n\n\treturn (\n\t\t<EntitiesFiltersSectionView>\n\t\t\t<Button variant=\"contained\">\n\t\t\t\t<FiberManualRecordOutlinedIcon /> All <ArrowDropDownOutlinedIcon />\n\t\t\t</Button>\n\n\t\t\t<Button>\n\t\t\t\t<MoreHorizOutlinedIcon />\n\t\t\t</Button>\n\n\t\t\t<SectionSeparator variant={SeparatorVariant.VERTICAL} />\n\n\t\t\t<Button>\n\t\t\t\t<ImportExportRoundedIcon /> Sort\n\t\t\t</Button>\n\n\t\t\t<DropdownContainer buttonView={getButtonView()}>\n\t\t\t\t<AdvancedFiltersView />\n\t\t\t</DropdownContainer>\n\n\t\t\t<SectionSeparator variant={SeparatorVariant.VERTICAL} />\n\n\t\t\t<Button className={\"expandButton\"} onClick={changeFullScreen}>\n\t\t\t\t{fullScreenMode ? <UnfoldLessRoundedIcon /> : <UnfoldMoreRoundedIcon />}\n\t\t\t</Button>\n\n\t\t\t<SectionSeparator variant={SeparatorVariant.VERTICAL} />\n\n\t\t\t<Button>\n\t\t\t\t<ShareRoundedIcon /> Share\n\t\t\t</Button>\n\t\t</EntitiesFiltersSectionView>\n\t);\n};\n","import React, {FC} from \"react\";\nimport BlurOnRoundedIcon from \"@material-ui/icons/BlurOnRounded\";\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\nimport {Button} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport {blue} from \"@material-ui/core/colors\";\n\nconst Wrapper = styled.div`\n\tbutton {\n\t\tfont-weight: 400;\n\t\tcolor: ${blue[\"700\"]};\n\t\tborder-color: ${blue[\"700\"]};\n\n\t\tsvg {\n\t\t\tfill: ${blue[\"700\"]};\n\t\t}\n\t}\n`;\n\nexport const FollowedButton: FC = () => (\n\t<Wrapper>\n\t\t<Button variant=\"outlined\">\n\t\t\t<BlurOnRoundedIcon /> Followed <ArrowDropDownOutlinedIcon />\n\t\t</Button>\n\t</Wrapper>\n);\n","import {InputAdornment, OutlinedInput} from \"@material-ui/core\";\nimport SearchRoundedIcon from \"@material-ui/icons/SearchRounded\";\nimport {inject, observer} from \"mobx-react\";\nimport React, {ChangeEvent, FC} from \"react\";\nimport styled from \"styled-components\";\nimport {SectionSeparator} from \"../../common/SectionSeparator\";\nimport {SeparatorVariant} from \"../../consts/SeparatorVariant\";\nimport {EntitiesStore} from \"../../stores/EntitiesStore\";\nimport {EntitiesFiltersSectionView} from \"./FirstFiltersSection\";\nimport {FollowedButton} from \"../../common/FollowedButton\";\n\ninterface IProps {\n\tentitiesStore?: EntitiesStore;\n}\n\nconst EntitiesSecondFiltersSectionView = styled(EntitiesFiltersSectionView)``;\nexport const SecondFiltersSectionClass: FC<IProps> = ({entitiesStore}) => {\n\tif (!entitiesStore) return null;\n\n\tconst onChange = (e: ChangeEvent) => {\n\t\tconst inputValue = (e.target as HTMLInputElement).value;\n\n\t\tentitiesStore?.changeFilterInputValue(inputValue);\n\t};\n\n\treturn (\n\t\t<EntitiesSecondFiltersSectionView>\n\t\t\t<OutlinedInput\n\t\t\t\tplaceholder={\"Search...\"}\n\t\t\t\ttype={\"text\"}\n\t\t\t\tvalue={entitiesStore.filterInputValue}\n\t\t\t\tonChange={onChange}\n\t\t\t\tendAdornment={\n\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t<SearchRoundedIcon />\n\t\t\t\t\t</InputAdornment>\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t<SectionSeparator variant={SeparatorVariant.VERTICAL} />\n\n\t\t\t<FollowedButton />\n\t\t</EntitiesSecondFiltersSectionView>\n\t);\n};\n\nexport const SecondFiltersSection = inject(\"entitiesStore\")(observer(SecondFiltersSectionClass));\n","import React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {FirstFiltersSection} from \"./FirstFiltersSection\";\nimport {SecondFiltersSection} from \"./SecondFiltersSection\";\n\ninterface IProps {\n\tchangeFullScreen: () => void;\n\tfullScreenMode: boolean;\n}\n\nconst EntitiesFiltersView = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\n\tmargin: 10px 0;\n\n\t.MuiOutlinedInput-input {\n\t\tpadding: 6px 14px;\n\t}\n`;\n\nexport const EntitiesFilters: FC<IProps> = ({changeFullScreen, fullScreenMode}) => {\n\treturn (\n\t\t<EntitiesFiltersView>\n\t\t\t<FirstFiltersSection changeFullScreen={changeFullScreen} fullScreenMode={fullScreenMode} />\n\t\t\t<SecondFiltersSection />\n\t\t</EntitiesFiltersView>\n\t);\n};\n","import {SvgIconTypeMap} from \"@material-ui/core\";\nimport {green, grey, lightBlue, yellow} from \"@material-ui/core/colors\";\nimport {OverridableComponent} from \"@material-ui/core/OverridableComponent\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport DomainIcon from \"@material-ui/icons/Domain\";\nimport ForumIcon from \"@material-ui/icons/Forum\";\nimport PeopleIcon from \"@material-ui/icons/People\";\n\nexport interface SingleEntitiesFiltersDefinition {\n\tname: EntitiesFiltersName;\n\tcolor: string;\n\ticon: OverridableComponent<SvgIconTypeMap> | null;\n}\n\nexport enum EntitiesFiltersName {\n\tALL = \"All\",\n\tSAS = \"SAS\",\n\tSARL = \"SARL\",\n\tSECONDARY_BUSINESS = \"Secondary business\",\n\tCOMMUNITIES = \"Communities\",\n\tPOA = \"POA\",\n\tSURVEY = \"Survey\",\n}\n\nexport const EntitiesFiltersDefinitions: SingleEntitiesFiltersDefinition[] = [\n\t{\n\t\ticon: null,\n\t\tcolor: grey[\"400\"],\n\t\tname: EntitiesFiltersName.ALL,\n\t},\n\t{\n\t\ticon: DomainIcon,\n\t\tcolor: green[\"400\"],\n\t\tname: EntitiesFiltersName.SAS,\n\t},\n\t{\n\t\ticon: DomainIcon,\n\t\tcolor: lightBlue[\"400\"],\n\t\tname: EntitiesFiltersName.SARL,\n\t},\n\t{\n\t\ticon: DomainIcon,\n\t\tcolor: yellow[\"800\"],\n\t\tname: EntitiesFiltersName.SECONDARY_BUSINESS,\n\t},\n\t{\n\t\ticon: ForumIcon,\n\t\tcolor: grey[\"400\"],\n\t\tname: EntitiesFiltersName.COMMUNITIES,\n\t},\n\t{\n\t\ticon: DescriptionIcon,\n\t\tcolor: grey[\"400\"],\n\t\tname: EntitiesFiltersName.POA,\n\t},\n\t{\n\t\ticon: PeopleIcon,\n\t\tcolor: grey[\"400\"],\n\t\tname: EntitiesFiltersName.SURVEY,\n\t},\n];\n","import React, {PropsWithChildren, useEffect, useState} from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\ninterface IProps<T> {\n\tlist: T[];\n\trenderListElement: (element: T) => JSX.Element;\n\tcountPerPage?: number;\n}\n\nexport const PaginationView = <T,>(props: PropsWithChildren<IProps<T>>) => {\n\tconst {list, countPerPage, renderListElement} = props;\n\tconst defaultCountPerPage = 10;\n\n\tconst [pageNumber, changePageNumber] = useState<number>(1);\n\tconst [pagesCount, changePagesCount] = useState<number>(1);\n\n\tconst getCountPerPage = () => countPerPage || defaultCountPerPage;\n\n\tuseEffect(() => {\n\t\tconst nextPagesCount = Math.ceil(list.length / getCountPerPage());\n\n\t\tif (pagesCount !== nextPagesCount) {\n\t\t\tchangePagesCount(nextPagesCount);\n\t\t}\n\n\t\tchangePageNumber(1);\n\n\t\t// eslint-disable-next-line\n\t}, [list]);\n\n\tconst handleChange = (event: React.ChangeEvent<unknown>, page: number) => {\n\t\tchangePageNumber(page);\n\t};\n\n\tconst getIndex = () => {\n\t\treturn pageNumber === 1 ? 0 : (pageNumber - 1) * getCountPerPage();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<>\n\t\t\t\t{list.slice(getIndex(), getIndex() + getCountPerPage()).map((element: T) => renderListElement(element))}\n\t\t\t</>\n\n\t\t\t<Pagination\n\t\t\t\tpage={pageNumber}\n\t\t\t\tcount={pagesCount}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tstyle={{width: \"100%\", display: \"flex\", justifyContent: \"center\"}}\n\t\t\t/>\n\t\t</>\n\t);\n};\n","import {blue, grey} from \"@material-ui/core/colors\";\nimport {inject, observer} from \"mobx-react\";\nimport React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {defaultBoxShadow} from \"../../assets/variables\";\nimport {ViewMode} from \"../../consts/ViewMode\";\nimport {Entity} from \"../../interfaces/Entity\";\nimport {EntitiesStore} from \"../../stores/EntitiesStore\";\nimport {PaginationView} from \"../../common/PaginationView\";\n\ninterface IProps {\n\tentitiesStore?: EntitiesStore;\n\tviewMode: ViewMode;\n}\n\ninterface ISingleEntity {\n\tviewMode: ViewMode;\n}\n\nconst EntitiesContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n`;\n\nconst SingleEntity = styled.div<ISingleEntity>`\n\tdisplay: flex;\n\tflex-direction: row;\n\n\twidth: ${(props) => (props.viewMode === ViewMode.MOSAIC ? \"300px\" : \"100%\")};\n\tmargin: ${(props) => (props.viewMode === ViewMode.MOSAIC ? \"10px 10px\" : \"2px 10px\")};\n\tpadding: 10px;\n\tborder-radius: 10px;\n\n\tbox-shadow: ${defaultBoxShadow};\n\n\tdiv {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t}\n\n\timg {\n\t\twidth: ${(props) => (props.viewMode === ViewMode.MOSAIC ? \" 90px\" : \"60px\")};\n\t\tmargin-right: 10px;\n\t}\n\n\tem {\n\t\tfont-style: inherit;\n\t\tcolor: ${grey[\"800\"]};\n\t\tfont-weight: 300;\n\t\tfont-size: 0.8em;\n\t}\n\n\tstrong {\n\t\tfont-style: inherit;\n\t\tcolor: ${blue[\"900\"]};\n\t\tfont-weight: 400;\n\t}\n`;\n\nexport const EntitiesViewClass: FC<IProps> = ({entitiesStore, viewMode}) => {\n\tif (!entitiesStore || !entitiesStore.entities) return null;\n\n\tconst getEntities = (): Entity[] => {\n\t\tif (entitiesStore) {\n\t\t\tconst {entities, filteredEntities} = entitiesStore;\n\t\t\tconst targetEntities = entitiesStore.filterInputValue ? [...filteredEntities] : [...entities];\n\n\t\t\treturn targetEntities || [];\n\t\t}\n\n\t\treturn [];\n\t};\n\n\tconst renderListElement = (entity: Entity) => {\n\t\tconst name = `${entity.name[0].toUpperCase()}${entity.name.slice(1, entity.name.length)}`;\n\n\t\treturn (\n\t\t\t<SingleEntity viewMode={viewMode} key={entity.id}>\n\t\t\t\t<div>\n\t\t\t\t\t<img src={entity.photo.url} alt=\"entity\" />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<strong>{name}</strong>\n\t\t\t\t\t<em>\n\t\t\t\t\t\t{entity.address.suite}\n\t\t\t\t\t\t{\", \"}\n\t\t\t\t\t\t{entity.address.street}\n\t\t\t\t\t\t{\", \"}\n\t\t\t\t\t\t{entity.address.city}\n\t\t\t\t\t\t{\", \"}\n\t\t\t\t\t</em>\n\t\t\t\t</div>\n\t\t\t</SingleEntity>\n\t\t);\n\t};\n\n\treturn (\n\t\t<EntitiesContainer>\n\t\t\t<PaginationView<Entity> list={getEntities()} renderListElement={renderListElement} countPerPage={20} />\n\t\t</EntitiesContainer>\n\t);\n};\n\nexport const EntitiesView = inject(\"entitiesStore\")(observer(EntitiesViewClass));\n","import React, {FC} from \"react\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n\ttitle: string;\n}\n\nconst Title = styled.div`\n\twidth: 100%;\n\theight: auto;\n\n\tdisplay: flex;\n\talign-items: center;\n\n\ttext-align: left;\n\tfont-size: 1.3em;\n\n\tsvg {\n\t\tmargin-left: 5px;\n\t}\n`;\n\nexport const SectionTitle: FC<IProps> = (props) => <Title>{props.title}</Title>;\n","import {Button} from \"@material-ui/core\";\nimport ListRoundedIcon from \"@material-ui/icons/ListRounded\";\nimport ViewModuleRoundedIcon from \"@material-ui/icons/ViewModuleRounded\";\nimport React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {SectionTitle} from \"../../common/SectionTitle\";\nimport {ViewMode} from \"../../consts/ViewMode\";\n\ninterface IProps {\n\tviewMode: ViewMode;\n\tchangeViewMode: (viewMode: ViewMode) => void;\n}\n\nconst HeaderContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\n\tsection {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\n\t\tbutton {\n\t\t\tmargin: 0 5px;\n\n\t\t\tsvg {\n\t\t\t\tmargin-right: 5px;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const EntitiesHeader: FC<IProps> = ({viewMode, changeViewMode}) => {\n\tconst {MOSAIC, LIST} = ViewMode;\n\n\treturn (\n\t\t<HeaderContainer>\n\t\t\t<SectionTitle title={\"Entities\"} />\n\t\t\t<section>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tonClick={() => changeViewMode(MOSAIC)}\n\t\t\t\t\tcolor={viewMode === MOSAIC ? \"primary\" : \"default\"}\n\t\t\t\t>\n\t\t\t\t\t<ViewModuleRoundedIcon />\n\t\t\t\t\t{viewMode === MOSAIC ? \"Mosaic\" : \"\"}\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tonClick={() => changeViewMode(LIST)}\n\t\t\t\t\tcolor={viewMode === LIST ? \"primary\" : \"default\"}\n\t\t\t\t>\n\t\t\t\t\t<ListRoundedIcon />\n\t\t\t\t\t{viewMode === MOSAIC ? \"\" : \"List\"}\n\t\t\t\t</Button>\n\t\t\t</section>\n\t\t</HeaderContainer>\n\t);\n};\n","import React, {FC, useState} from \"react\";\nimport {EntitiesFilters} from \"../components/entities/EntitiesFilters\";\nimport {EntitiesView} from \"../components/entities/EntitiesView\";\nimport {EntitiesHeader} from \"../components/entities/Header\";\nimport {ViewMode} from \"../consts/ViewMode\";\nimport styled from \"styled-components\";\nimport CustomScrollbar from \"../common/CustomScrollbar\";\n\ninterface IProps {}\n\nconst Wrapper = styled.div<{fullScreen: boolean}>`\n\tposition: ${(props) => (props.fullScreen ? \"fixed\" : `static`)};\n\ttop: 0;\n\tleft: 0;\n\tz-index: ${(props) => (props.fullScreen ? 1000 : 1)};\n\n\tbackground-color: white;\n\twidth: ${(props) => (props.fullScreen ? \"100vw\" : `100%`)};\n\theight: ${(props) => (props.fullScreen ? \"100vh\" : `100%`)};\n\tpadding: 20px;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tbox-sizing: border-box;\n`;\n\nexport const Entities: FC<IProps> = () => {\n\tconst {MOSAIC} = ViewMode;\n\tconst [viewMode, changeViewMode] = useState<ViewMode>(MOSAIC);\n\tconst [fullScreen, changeFullScreen] = useState<boolean>(false);\n\n\tconst toggleFullScreenMode = () => {\n\t\tchangeFullScreen(!fullScreen);\n\t};\n\n\tconst getContent = () => (\n\t\t<>\n\t\t\t<EntitiesHeader viewMode={viewMode} changeViewMode={changeViewMode} />\n\t\t\t<EntitiesFilters changeFullScreen={toggleFullScreenMode} fullScreenMode={fullScreen} />\n\t\t\t<EntitiesView viewMode={viewMode} />\n\t\t</>\n\t);\n\n\treturn (\n\t\t<Wrapper fullScreen={fullScreen}>\n\t\t\t{fullScreen ? (\n\t\t\t\t<CustomScrollbar autoHeight={false} style={{height: \"inherit\"}}>\n\t\t\t\t\t{getContent()}\n\t\t\t\t</CustomScrollbar>\n\t\t\t) : (\n\t\t\t\tgetContent()\n\t\t\t)}\n\t\t</Wrapper>\n\t);\n};\n","export default __webpack_public_path__ + \"static/media/404.1237e584.svg\";","import React, {FC} from \"react\";\n\nimport styled from \"styled-components\";\nimport page404 from \"../assets/icons/404.svg\";\nimport {ButtonWithLink} from \"../common/ButtonWithLink\";\n\nconst NotFoundPageContainer = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tpadding: 0 40px;\n\tbox-sizing: border-box;\n\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 1em;\n\n\tsection {\n\t\twidth: 50%;\n\t\talign-self: center;\n\n\t\tsvg {\n\t\t\twidth: 100%;\n\t\t\tvisibility: hidden;\n\t\t}\n\t}\n\n\th1 {\n\t\tfont-size: 7.5em;\n\t\tmargin: 15px 0;\n\t\tfont-weight: 500;\n\t}\n\n\th2 {\n\t\tfont-weight: 500;\n\t}\n`;\n\nexport const NotFoundPage: FC = () => (\n\t<NotFoundPageContainer>\n\t\t<section>\n\t\t\t<img src={page404} alt={\"page not found\"} />\n\t\t</section>\n\t\t<section>\n\t\t\t<h1>404</h1>\n\t\t\t<h2>UH OH! You're lost.</h2>\n\t\t\t<p>\n\t\t\t\tThe page you are looking for does not exist. How you got here is a mystery. But you can click the button\n\t\t\t\tbelow to go back to the homepage.\n\t\t\t</p>\n\t\t\t<ButtonWithLink link={\"/\"} text={\"Home\"} />\n\t\t</section>\n\t</NotFoundPageContainer>\n);\n","export default __webpack_public_path__ + \"static/media/enxampleperson.e9bf29cb.png\";","import {Avatar} from \"@material-ui/core\";\nimport React, {FC} from \"react\";\n\nimport styled from \"styled-components\";\nimport personImage from \"../../assets/images/enxampleperson.png\";\nimport {LatestPublication} from \"../../interfaces/LatestPublication\";\n\ninterface IProps {\n\tpublication: LatestPublication;\n}\n\nconst SinglePublicationContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n\n\t.publication-image {\n\t\timg {\n\t\t\twidth: 85px;\n\t\t\theight: 85px;\n\t\t\tobject-fit: cover;\n\t\t}\n\n\t\tmargin-right: 5px;\n\t}\n\n\t.title {\n\t\tfont-weight: 400;\n\t}\n\n\t.publication-content {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-around;\n\t}\n`;\n\nconst InfoContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tfont-size: 0.9em;\n\n\tp,\n\t.avatar {\n\t\tmargin: 0 5px 0 0;\n\t}\n\n\t.author {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n`;\n\nexport const SinglePublication: FC<IProps> = ({publication}) => {\n\treturn (\n\t\t<SinglePublicationContainer>\n\t\t\t<div className=\"publication-image\">\n\t\t\t\t<img src={publication.photo.url} alt=\"publication\" />\n\t\t\t</div>\n\t\t\t<div className=\"publication-content\">\n\t\t\t\t<strong className=\"title\">{publication.title}</strong>\n\t\t\t\t<InfoContainer>\n\t\t\t\t\t<p>{publication.lastUpdateDate.toDateString()}</p>\n\t\t\t\t\t<div className=\"author\">\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\talt={publication.user.name}\n\t\t\t\t\t\t\tsrc={personImage}\n\t\t\t\t\t\t\tclassName={\"avatar\"}\n\t\t\t\t\t\t\tstyle={{width: 20, height: 20}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{publication.user.name}\n\t\t\t\t\t</div>\n\t\t\t\t</InfoContainer>\n\t\t\t</div>\n\t\t</SinglePublicationContainer>\n\t);\n};\n","import {inject, observer} from \"mobx-react\";\nimport React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport CustomScrollbar from \"../common/CustomScrollbar\";\nimport {SinglePublication} from \"../components/mainPage/SinglePublication\";\nimport {MainPageStore} from \"../stores/MainPageStore\";\n\ninterface IProps {\n\tmainPageStore?: MainPageStore;\n}\n\nconst PublicationsContainer = styled.div`\n\twidth: 80%;\n\theight: calc(100vh - 70px);\n\tmargin: 20px 10%;\n\toverflow: hidden;\n`;\n\nconst PublicationsClass: FC<IProps> = ({mainPageStore}) => {\n\tif (!mainPageStore || !mainPageStore.latestPublications) return null;\n\n\tconst {latestPublications} = mainPageStore;\n\treturn (\n\t\t<PublicationsContainer>\n\t\t\t<CustomScrollbar maxHeight={\"100%\"}>\n\t\t\t\t{latestPublications?.map((publication) => (\n\t\t\t\t\t<SinglePublication key={publication.id} publication={publication} />\n\t\t\t\t))}\n\t\t\t</CustomScrollbar>\n\t\t</PublicationsContainer>\n\t);\n};\n\nexport const Publications = inject(\"mainPageStore\")(observer(PublicationsClass));\n","import styled from \"styled-components\";\n\nexport const WorkspaceImage = styled.img<{height: string}>`\n\twidth: 100%;\n\theight: ${(props) => props.height};\n\n\tobject-fit: cover;\n\tz-index: 0;\n`;\n","import {Button} from \"@material-ui/core\";\nimport {grey} from \"@material-ui/core/colors\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport React, {FC, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {defaultBoxShadow} from \"../../assets/variables\";\nimport {EditableText} from \"../../common/EditableText\";\nimport {WorkspaceImage} from \"../../common/WorkspaceImage\";\nimport {AccessType} from \"../../consts/AccessType\";\nimport {Workspace} from \"../../interfaces/Workspace\";\n\ninterface IProps {\n\tworkspace: Workspace;\n\tchangeWorkspaceTitle: (id: string, value: string) => void;\n\tchangeWorkspaceDescription: (id: string, value: string) => void;\n}\n\nconst WorkspaceContainer = styled.div`\n\twidth: 100%;\n\theight: 340px;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tborder-radius: 10px;\n\toverflow: hidden;\n\tbox-shadow: ${defaultBoxShadow};\n\n\tmain {\n\t\twidth: 100%;\n\t\tpadding: 10px 20px 0 20px;\n\t\tposition: relative;\n\t\tbox-sizing: border-box;\n\n\t\tdisplay: flex;\n\t\talign-items: center;\n\n\t\timg {\n\t\t\theight: 50px;\n\t\t}\n\t}\n`;\n\nconst WorkspaceInfo = styled.section`\n\twidth: 100%;\n\tpadding-left: 15px;\n\tpadding-bottom: 10px;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tp,\n\tstrong {\n\t\tmargin: 5px;\n\t}\n\n\tstrong {\n\t\tfont-size: 1.1em;\n\t}\n\n\tp {\n\t\tfont-size: 0.9em;\n\t\tcolor: ${grey[\"700\"]};\n\t}\n\n\tbutton {\n\t\tposition: absolute;\n\t\tright: 20px;\n\t\ttop: 7px;\n\t}\n\n\t.MuiFormControl-root {\n\t\twidth: 90%;\n\n\t\ttextarea,\n\t\tinput {\n\t\t\tfont-weight: 400;\n\t\t\tfont-size: 0.9em;\n\t\t\tcolor: ${grey[\"700\"]};\n\t\t}\n\t}\n`;\n\nexport const SingleEditableWorkspace: FC<IProps> = (props) => {\n\tconst {EDIT, READ} = AccessType;\n\tconst [accessType, changeType] = useState<AccessType>(READ);\n\n\tconst {id, photo, description, icon, title} = props.workspace;\n\n\tconst clickOnEditButton = () => {\n\t\tconst newMode = accessType === READ ? EDIT : READ;\n\n\t\tchangeType(newMode);\n\t};\n\n\treturn (\n\t\t<WorkspaceContainer>\n\t\t\t<WorkspaceImage height={\"200px\"} src={photo.url} alt=\"workspace-image\" />\n\t\t\t<main>\n\t\t\t\t<img src={icon} alt=\"workspace-icon\" />\n\t\t\t\t<WorkspaceInfo>\n\t\t\t\t\t<strong>\n\t\t\t\t\t\t<EditableText\n\t\t\t\t\t\t\tisEditable={accessType === EDIT}\n\t\t\t\t\t\t\ttext={title}\n\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\tprops.changeWorkspaceTitle(id, value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</strong>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<EditableText\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tisEditable={accessType === EDIT}\n\t\t\t\t\t\t\ttext={description}\n\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\tprops.changeWorkspaceDescription(id, value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<Button onClick={clickOnEditButton}>\n\t\t\t\t\t\t<SettingsIcon />\n\t\t\t\t\t</Button>\n\t\t\t\t</WorkspaceInfo>\n\t\t\t</main>\n\t\t</WorkspaceContainer>\n\t);\n};\n","import React, {FC} from \"react\";\nimport styled from \"styled-components\";\n\nconst Separator = styled.span`\n\tline-height: 2;\n\tpadding: 0 10px;\n`;\n\nexport const DotSeparator: FC = () => <Separator>•</Separator>;\n","import React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {defaultBoxShadow} from \"../../assets/variables\";\nimport {DotSeparator} from \"../../common/DotSeparator\";\nimport {Work} from \"../../interfaces/Work\";\n\ninterface IProps {\n\twork: Work;\n\tshowCompanyDetails?: boolean;\n\tshowWorkspaceDefinitionDetails?: boolean;\n}\n\nconst WorkContainer = styled.div`\n\twidth: calc(100% - 50px);\n\theight: 110px;\n\tbackground-color: white;\n\tpadding: 15px 25px;\n\tmargin-bottom: 20px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\tbox-shadow: ${defaultBoxShadow};\n`;\n\nconst Title = styled.div`\n\tfont-size: 1.3em;\n`;\n\nconst Content = styled.div`\n\tfont-size: 1em;\n`;\n\nconst Info = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tfont-weight: 300;\n`;\n\nconst Workspace = styled.span`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n`;\n\nconst WorkspaceIcon = styled.img`\n\twidth: 15px;\n\tmargin-right: 10px;\n`;\n\nconst WorkspaceDefinitionContainer = styled(Workspace)<{color: string}>`\n\tcolor: ${(props) => props.color};\n\n\tsvg {\n\t\tfill: ${(props) => props.color};\n\t}\n`;\n\nexport const SingleWork: FC<IProps> = (props) => {\n\tconst {name, body, workspaceName, lastUpdateDate, workspaceDefinition, icon, user} = props.work;\n\n\tconst getLastUpdateText = (): string => {\n\t\tconst today = new Date();\n\t\tconst datesDifference = today.getTime() - lastUpdateDate.getTime();\n\t\tconst daysCount = Math.floor((datesDifference / (1000 * 60 * 60 * 24)) % 7);\n\t\tif (daysCount === 0) return \"today\";\n\t\telse if (daysCount === 1) return \"yesterday\";\n\t\telse return `${daysCount} days ago`;\n\t};\n\n\treturn (\n\t\t<WorkContainer>\n\t\t\t<Title>{name}</Title>\n\t\t\t<Content>{body}</Content>\n\t\t\t<Info>\n\t\t\t\t<div>{user.company.name}</div>\n\t\t\t\t<DotSeparator />\n\t\t\t\t<Workspace>\n\t\t\t\t\t{props.showCompanyDetails && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<WorkspaceIcon src={icon} alt=\"workspace-icon\" />\n\t\t\t\t\t\t\t<div>{workspaceName}</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{props.showWorkspaceDefinitionDetails && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<WorkspaceDefinitionContainer color={workspaceDefinition.color}>\n\t\t\t\t\t\t\t\t{workspaceDefinition.icon && React.createElement(workspaceDefinition.icon)}\n\t\t\t\t\t\t\t\t{workspaceDefinition.name}\n\t\t\t\t\t\t\t</WorkspaceDefinitionContainer>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Workspace>\n\t\t\t\t<DotSeparator />\n\t\t\t\t<span>\n\t\t\t\t\tUpdated {getLastUpdateText()} by {user.name}\n\t\t\t\t</span>\n\t\t\t</Info>\n\t\t</WorkContainer>\n\t);\n};\n","import React, {FC} from \"react\";\nimport {SectionTitle} from \"./SectionTitle\";\nimport {TextField} from \"@material-ui/core\";\nimport {FollowedButton} from \"./FollowedButton\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n\ttitle: string;\n\tonChange: (value: string) => void;\n}\n\nconst Filters = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\n\tposition: absolute;\n\ttop: -15px;\n\tright: 0;\n\n\t.filter-input {\n\t\twidth: 100%;\n\t\tmargin: 10px 10px;\n\n\t\t.MuiOutlinedInput-input {\n\t\t\tpadding: 10px 14px;\n\t\t}\n\n\t\t.MuiInputLabel-outlined {\n\t\t\ttransform: translate(14px, 15px) scale(1);\n\t\t}\n\n\t\t.MuiInputLabel-outlined.Mui-focused {\n\t\t\ttransform: translate(14px, -6px) scale(0.75);\n\t\t}\n\t}\n`;\n\nexport const SectionHeaderWithFilterInput: FC<IProps> = ({title, onChange}) => {\n\treturn (\n\t\t<>\n\t\t\t<SectionTitle title={title} />\n\t\t\t<Filters>\n\t\t\t\t<TextField\n\t\t\t\t\tclassName=\"filter-input\"\n\t\t\t\t\tplaceholder=\"Filter\"\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tonChange(e.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<FollowedButton />\n\t\t\t</Filters>\n\t\t</>\n\t);\n};\n","import {Button} from \"@material-ui/core\";\nimport {grey} from \"@material-ui/core/colors\";\nimport {inject, observer} from \"mobx-react\";\nimport React, {FC, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {\n\tEntitiesFiltersDefinitions,\n\tEntitiesFiltersName,\n\tSingleEntitiesFiltersDefinition,\n} from \"../../consts/EntitiesFiltersDefinitions\";\nimport {Work} from \"../../interfaces/Work\";\nimport {MainPageStore} from \"../../stores/MainPageStore\";\nimport {PaginationView} from \"../../common/PaginationView\";\nimport {SingleWork} from \"../mainPage/SingleWork\";\nimport {SectionHeaderWithFilterInput} from \"../../common/SectionHeaderWithFilterInput\";\n\ninterface IProps {\n\tmainPageStore?: MainPageStore;\n}\n\nconst ResumeYourWorkMain = styled.div`\n\tmargin: 20px 0;\n\twidth: 95%;\n\tmin-height: 400px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding-bottom: 100px;\n\tposition: relative;\n`;\n\nconst FiltersView = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-start;\n\talign-items: center;\n\n\tmargin-top: 20px;\n\n\tbutton {\n\t\tpadding: 5px;\n\t\tfont-weight: 300;\n\t\tfont-size: 0.85em;\n\t\ttransition: 0.3s;\n\n\t\tsvg {\n\t\t\tmargin: 0 2.5px;\n\t\t\tfill: ${grey[\"700\"]};\n\t\t\ttransition: 0.3s;\n\t\t}\n\t}\n`;\n\nconst FilterContainer = styled.div<{color: string; selected: boolean}>`\n\tmargin: 5px;\n\tbackground-color: ${(props) => (props.selected ? props.color : null)};\n`;\n\nconst LastUpdates: FC<IProps> = ({mainPageStore}) => {\n\tconst [value, changeValue] = useState<string>(\"\");\n\n\tif (!mainPageStore) return null;\n\n\tconst getWorks = (): Work[] => {\n\t\tif (mainPageStore) {\n\t\t\tconst {resumeYourWorks} = mainPageStore;\n\n\t\t\treturn resumeYourWorks\n\t\t\t\t.filter((work: Work) => {\n\t\t\t\t\tif (mainPageStore?.workspacesFilters.includes(EntitiesFiltersName.ALL)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (mainPageStore?.workspacesFilters.includes(work.workspaceDefinition.name)) return true;\n\n\t\t\t\t\treturn false;\n\t\t\t\t})\n\t\t\t\t.filter((work: Work) => work.name.toLowerCase().includes(value.toLowerCase()));\n\t\t}\n\n\t\treturn [];\n\t};\n\n\tconst onInputChange = (value: string) => {\n\t\tchangeValue(value);\n\t};\n\n\tconst renderListElement = (work: Work) => <SingleWork key={work.id} work={work} showWorkspaceDefinitionDetails />;\n\n\treturn (\n\t\t<ResumeYourWorkMain>\n\t\t\t<SectionHeaderWithFilterInput title={\"Latest Updates\"} onChange={onInputChange} />\n\n\t\t\t<FiltersView>\n\t\t\t\t{EntitiesFiltersDefinitions.map((filterDefinition: SingleEntitiesFiltersDefinition) => (\n\t\t\t\t\t<FilterContainer\n\t\t\t\t\t\tcolor={filterDefinition.color}\n\t\t\t\t\t\tselected={mainPageStore?.workspacesFilters.includes(filterDefinition.name)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button onClick={() => mainPageStore?.addOrRemoveWorkspaceFilter(filterDefinition.name)}>\n\t\t\t\t\t\t\t{filterDefinition.icon && React.createElement(filterDefinition.icon)}\n\t\t\t\t\t\t\t{filterDefinition.name}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</FilterContainer>\n\t\t\t\t))}\n\t\t\t</FiltersView>\n\n\t\t\t<PaginationView<Work> list={getWorks()} renderListElement={renderListElement} />\n\t\t</ResumeYourWorkMain>\n\t);\n};\n\nexport const WorkspaceLastUpdates = inject(\"mainPageStore\")(observer(LastUpdates));\n","import {SvgIconTypeMap} from \"@material-ui/core\";\nimport {OverridableComponent} from \"@material-ui/core/OverridableComponent\";\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport DomainIcon from \"@material-ui/icons/Domain\";\nimport React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {defaultBoxShadow} from \"../../assets/variables\";\n\ninterface IProps {}\n\ninterface Tile {\n\tid: number;\n\tname: string;\n\tdescription: string;\n\ticon: OverridableComponent<SvgIconTypeMap>;\n}\n\nconst tiles: Tile[] = [\n\t{\n\t\tid: 1,\n\t\tname: \"Explore your entities\",\n\t\tdescription:\n\t\t\t\"laudantium enim quasi est quidem magnam voluptate ipsam eos tempora quo necessitatibus dolor quam autem quasi reiciendis et nam sapiente accusantium\",\n\t\ticon: DomainIcon,\n\t},\n\t{\n\t\tid: 2,\n\t\tname: \"Structure the ownership\",\n\t\tdescription:\n\t\t\t\"laudantium enim quasi est quidem magnam voluptate ipsam eos tempora quo necessitatibus dolor quam autem quasi reiciendis et nam sapiente accusantium\",\n\t\ticon: AccountTreeIcon,\n\t},\n\t{\n\t\tid: 3,\n\t\tname: \"Define the calendar\",\n\t\tdescription:\n\t\t\t\"laudantium enim quasi est quidem magnam voluptate ipsam eos tempora quo necessitatibus dolor quam autem quasi reiciendis et nam sapiente accusantium\",\n\t\ticon: DateRangeIcon,\n\t},\n];\n\nconst TilesContainer = styled.div`\n\tdisplay: flex;\n\tmargin: 40px 0;\n\tpadding: 20px 10px;\n\tjustify-content: space-between;\n\n\tbox-shadow: ${defaultBoxShadow};\n`;\n\nconst SingleTile = styled.div`\n\twidth: 300px;\n\theight: 200px;\n\tpadding: 10px;\n\n\tbackground-color: white;\n\tborder-radius: 10px;\n\tbox-sizing: border-box;\n\n\tposition: relative;\n\tz-index: 2;\n`;\n\nconst TileBg = styled.div`\n\twidth: 300px;\n\theight: 200px;\n\n\tposition: absolute;\n\tz-index: 0;\n\n\topacity: 0.1;\n\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\n\tsvg {\n\t\tfont-size: 200px;\n\t}\n`;\n\nexport const WorkspaceTiles: FC<IProps> = () => {\n\treturn (\n\t\t<TilesContainer>\n\t\t\t{tiles.map((tile) => (\n\t\t\t\t<SingleTile key={tile.id}>\n\t\t\t\t\t<TileBg>{React.createElement(tile.icon, {fontSize: \"large\", color: \"primary\"})}</TileBg>\n\n\t\t\t\t\t<section>{React.createElement(tile.icon, {fontSize: \"large\", color: \"primary\"})}</section>\n\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<strong>{tile.name}</strong>\n\t\t\t\t\t\t<p>{tile.description}</p>\n\t\t\t\t\t</section>\n\t\t\t\t</SingleTile>\n\t\t\t))}\n\t\t</TilesContainer>\n\t);\n};\n","import {inject, observer} from \"mobx-react\";\nimport React, {FC} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {SingleEditableWorkspace} from \"../components/workspaceView/SingleEditableWorkspace\";\nimport {WorkspaceLastUpdates} from \"../components/workspaceView/WorkspaceLastUpdates\";\nimport {WorkspaceTiles} from \"../components/workspaceView/WorkspaceTiles\";\nimport {MainPageStore} from \"../stores/MainPageStore\";\nimport {NotFoundPage} from \"./NotFoundPage\";\n\ninterface IProps {\n\tmainPageStore?: MainPageStore;\n}\n\nconst WorkspaceViewElement = styled.div`\n\twidth: 100%;\n`;\n\nconst WorkspaceView: FC<IProps> = ({mainPageStore}) => {\n\tconst {id} = useParams<{id: string}>();\n\tconst singleWorkspace = mainPageStore?.workspaces.find((workspace) => workspace.id === id);\n\n\tif (!mainPageStore) return null;\n\tif (!singleWorkspace) return <NotFoundPage />;\n\n\treturn (\n\t\t<WorkspaceViewElement>\n\t\t\t<SingleEditableWorkspace\n\t\t\t\tworkspace={singleWorkspace}\n\t\t\t\tchangeWorkspaceTitle={mainPageStore.changeWorkspaceTitle}\n\t\t\t\tchangeWorkspaceDescription={mainPageStore.changeWorkspaceDescription}\n\t\t\t/>\n\n\t\t\t<WorkspaceTiles />\n\t\t\t<WorkspaceLastUpdates />\n\t\t</WorkspaceViewElement>\n\t);\n};\n\nexport const SingleWorkspaceView = inject(\"mainPageStore\")(observer(WorkspaceView));\n","export default __webpack_public_path__ + \"static/media/house.cb5332ba.svg\";","export default __webpack_public_path__ + \"static/media/entities.94e58fe0.svg\";","export default __webpack_public_path__ + \"static/media/administration.78a1e611.svg\";","export default __webpack_public_path__ + \"static/media/open-book.513b666d.svg\";","export default __webpack_public_path__ + \"static/media/logout.0fc231a4.svg\";","export default __webpack_public_path__ + \"static/media/privacy.c46ba158.svg\";","import {Avatar} from \"@material-ui/core\";\nimport {blue} from \"@material-ui/core/colors\";\nimport {inject, observer} from \"mobx-react\";\nimport React, {FC} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport logout from \"../../assets/icons/logout.svg\";\nimport privacy from \"../../assets/icons/privacy.svg\";\nimport settings from \"../../assets/icons/settings.svg\";\nimport {SectionSeparator} from \"../../common/SectionSeparator\";\nimport {MainPageStore} from \"../../stores/MainPageStore\";\nimport {ButtonWithLink} from \"../../common/ButtonWithLink\";\n\nconst AccountSection = styled.section`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tmargin: 5px 0;\n\tpadding: 0 5px;\n`;\n\nconst AccountDetails = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding-left: 10px;\n\twidth: calc(100% - 50px);\n\n\tspan {\n\t\twhite-space: nowrap;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t}\n\n\ta {\n\t\tcolor: ${blue[\"300\"]} !important;\n\t\tfont-size: 12px;\n\t\tcursor: pointer;\n\t}\n`;\n\ninterface IProps {\n\tmainPageStore?: MainPageStore;\n}\n\nexport const AccountInfoElement: FC<IProps> = ({mainPageStore}) => {\n\tif (!mainPageStore || !mainPageStore.currentLoggedUser) return null;\n\n\treturn (\n\t\t<div>\n\t\t\t<AccountSection className={\"account\"}>\n\t\t\t\t<Avatar\n\t\t\t\t\talt={mainPageStore.currentLoggedUser.name}\n\t\t\t\t\tsrc={mainPageStore.currentLoggedUser.photo.url}\n\t\t\t\t\tstyle={{width: 40, height: 40}}\n\t\t\t\t/>\n\t\t\t\t<AccountDetails>\n\t\t\t\t\t<span>{mainPageStore.currentLoggedUser.name}</span>\n\t\t\t\t\t<Link to={\"/account\"}>See profile</Link>\n\t\t\t\t</AccountDetails>\n\t\t\t</AccountSection>\n\n\t\t\t<ButtonWithLink link={\"/privacy\"} icon={privacy} text={\"Privacy\"} />\n\t\t\t<ButtonWithLink link={\"/settings\"} icon={settings} text={\"Settings\"} />\n\n\t\t\t<SectionSeparator />\n\n\t\t\t<ButtonWithLink link={\"/logout\"} icon={logout} text={\"Logout\"} />\n\t\t</div>\n\t);\n};\n\nexport const AccountInfo = inject(\"mainPageStore\")(observer(AccountInfoElement));\n","import {DropdownSections} from \"../interfaces/DropdownSections\";\nimport home from \"../assets/icons/house.svg\";\nimport publications from \"../assets/icons/publications.svg\";\nimport peoples from \"../assets/icons/people.svg\";\nimport entities from \"../assets/icons/entities.svg\";\nimport administration from \"../assets/icons/administration.svg\";\nimport document from \"../assets/icons/document.svg\";\nimport corporate from \"../assets/icons/entities2.svg\";\nimport groupNorms from \"../assets/icons/open-book.svg\";\nimport {AccountInfo} from \"../components/navbar/AccountInfo\";\nimport React from \"react\";\n\nexport const defaultSection = {title: \"Home\", icon: home, link: \"/\"};\nexport const publicationSection = {title: \"Publications\", icon: publications, link: \"/publications\"};\n\nexport const dropdownSections: DropdownSections[] = [\n\t{\n\t\ttitle: \"Platform\",\n\t\toptions: [\n\t\t\tdefaultSection,\n\t\t\tpublicationSection,\n\t\t\t{title: \"Peoples\", icon: peoples, link: \"/peoples\"},\n\t\t\t{title: \"Entities\", icon: entities, link: \"/entities\"},\n\t\t\t{title: \"Administration\", icon: administration, link: \"/administration\"},\n\t\t],\n\t},\n\t{\n\t\ttitle: \"Workspaces\",\n\t\toptions: [\n\t\t\t{title: \"Client contract\", icon: document, link: \"/client-contract\"},\n\t\t\t{title: \"Supplier contract\", icon: document, link: \"/supplier-contract\"},\n\t\t\t{title: \"Corporate\", icon: corporate, link: \"/corporate\"},\n\t\t\t{title: \"Group Norms\", icon: groupNorms, link: \"/group-norms\"},\n\t\t\t{title: \"Real estate contracts\", icon: document, link: \"/real-estate-contracts\"},\n\t\t],\n\t},\n\t{\n\t\ttitle: \"Account\",\n\t\tcomponent: <AccountInfo />,\n\t},\n];\n","import {inject, observer} from \"mobx-react\";\nimport React, {FC} from \"react\";\n\nimport styled from \"styled-components\";\nimport {ButtonWithLink} from \"../../common/ButtonWithLink\";\nimport {MainPageStore} from \"../../stores/MainPageStore\";\n\nimport {SinglePublication} from \"./SinglePublication\";\nimport {defaultBoxShadow} from \"../../assets/variables\";\nimport {publicationSection} from \"../../consts/DropdownSections\";\n\ninterface IProps {\n\tmainPageStore?: MainPageStore;\n}\n\nconst LatestPublicationContainer = styled.div`\n\twidth: 95%;\n\tdisplay: flex;\n\tflex-direction: row;\n\tbackground-color: $white;\n\tbox-shadow: ${defaultBoxShadow};\n`;\n\nconst PublicationsContainer = styled.div`\n\tmargin-top: 10px;\n\twidth: 100%;\n`;\n\nconst MainPublication = styled.div`\n\twidth: 350px;\n\theight: 350px;\n\tposition: relative;\n\n\t.publication-image {\n\t\tposition: absolute;\n\t\tz-index: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\n\t\timg {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t}\n\t}\n\n\t.publication-content {\n\t\tposition: absolute;\n\t\twidth: calc(100% - 40px);\n\t\tbottom: 10px;\n\t\tleft: 10px;\n\t\tz-index: 1;\n\t\tcolor: white;\n\t\tbackground-color: rgba(0, 0, 0, 0.4);\n\t\tpadding: 10px;\n\t}\n`;\n\nconst RestPublications = styled.div`\n\twidth: calc(100% - 405px);\n\tmargin: 10px 5px -5px 5px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-end;\n`;\n\nconst SectionTitle = styled.strong`\n\tfont-weight: 500;\n\tfont-size: 1.3em;\n\twidth: 100%;\n`;\n\nconst LatestPublicationsView: FC<IProps> = ({mainPageStore}) => {\n\tif (!mainPageStore || !mainPageStore.latestPublications) return null;\n\n\tconst {latestPublications} = mainPageStore;\n\tconst mainPublication = latestPublications[0];\n\n\treturn (\n\t\t<LatestPublicationContainer>\n\t\t\t<MainPublication>\n\t\t\t\t<SinglePublication publication={mainPublication} />\n\t\t\t</MainPublication>\n\n\t\t\t<RestPublications>\n\t\t\t\t<SectionTitle>Latest publications</SectionTitle>\n\n\t\t\t\t<PublicationsContainer>\n\t\t\t\t\t{latestPublications?.slice(1, 4).map((publication) => (\n\t\t\t\t\t\t<SinglePublication key={publication.id} publication={publication} />\n\t\t\t\t\t))}\n\t\t\t\t</PublicationsContainer>\n\n\t\t\t\t<ButtonWithLink\n\t\t\t\t\tlink={\"/publications\"}\n\t\t\t\t\ttext={\"See more publications\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tmainPageStore?.changeCurrentDropdownSection(publicationSection);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</RestPublications>\n\t\t</LatestPublicationContainer>\n\t);\n};\n\nexport const LatestPublications = inject(\"mainPageStore\")(observer(LatestPublicationsView));\n","import {inject, observer} from \"mobx-react\";\nimport React, {FC, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {Work} from \"../../interfaces/Work\";\nimport {MainPageStore} from \"../../stores/MainPageStore\";\nimport {SingleWork} from \"./SingleWork\";\nimport {PaginationView} from \"../../common/PaginationView\";\nimport {SectionHeaderWithFilterInput} from \"../../common/SectionHeaderWithFilterInput\";\n\ninterface IProps {\n\tmainPageStore?: MainPageStore;\n}\n\nconst ResumeYourWorkMain = styled.div`\n\tmargin-top: 20px;\n\twidth: 95%;\n\tmin-height: 400px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding-bottom: 100px;\n\tposition: relative;\n`;\n\nconst ResumeYourWorkContainer = styled.div`\n\tmargin-top: 40px;\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nconst Filters = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\n\tposition: absolute;\n\ttop: -15px;\n\tright: 0;\n\n\t.filter-input {\n\t\twidth: 100%;\n\t\tmargin: 10px 10px;\n\n\t\t.MuiOutlinedInput-input {\n\t\t\tpadding: 10px 14px;\n\t\t}\n\n\t\t.MuiInputLabel-outlined {\n\t\t\ttransform: translate(14px, 15px) scale(1);\n\t\t}\n\n\t\t.MuiInputLabel-outlined.Mui-focused {\n\t\t\ttransform: translate(14px, -6px) scale(0.75);\n\t\t}\n\t}\n`;\n\nconst ResumeYourWorkClass: FC<IProps> = ({mainPageStore}) => {\n\tconst [value, changeValue] = useState<string>(\"\");\n\n\tconst onInputChange = (value: string) => {\n\t\tchangeValue(value);\n\t\tmainPageStore?.filterWorks(value);\n\t};\n\n\tconst getWorks = (): Work[] => {\n\t\tif (mainPageStore) {\n\t\t\tconst {resumeYourWorks, filteredWorks} = mainPageStore;\n\n\t\t\treturn value ? filteredWorks : resumeYourWorks;\n\t\t}\n\n\t\treturn [];\n\t};\n\n\tconst renderListElement = (work: Work) => <SingleWork key={work.id} work={work} showCompanyDetails />;\n\n\treturn (\n\t\t<ResumeYourWorkMain>\n\t\t\t<SectionHeaderWithFilterInput title={\"Latest Updates\"} onChange={onInputChange} />\n\n\t\t\t<ResumeYourWorkContainer>\n\t\t\t\t<PaginationView<Work> list={getWorks()} renderListElement={renderListElement} />\n\t\t\t</ResumeYourWorkContainer>\n\t\t</ResumeYourWorkMain>\n\t);\n};\n\nexport const ResumeYourWork = inject(\"mainPageStore\")(observer(ResumeYourWorkClass));\n","import React, {FC} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {defaultBoxShadow} from \"../../assets/variables\";\nimport {DotSeparator} from \"../../common/DotSeparator\";\nimport {Workspace} from \"../../interfaces/Workspace\";\nimport {WorkspaceImage} from \"../../common/WorkspaceImage\";\n\ninterface IProps {\n\tworkspace: Workspace;\n}\n\nconst WorkspaceContainer = styled.div`\n\twidth: 310px;\n\theight: 250px;\n\tposition: relative;\n\tmargin: 0 5px 20px 5px;\n\tflex: 0 0 auto;\n\tbackground-color: white;\n\n\tp {\n\t\tposition: absolute;\n\t\ttop: 120px;\n\t\tleft: 110px;\n\t\tfont-size: 1.2em;\n\t\tfont-weight: 500;\n\t}\n\n\tmain {\n\t\twidth: 100%;\n\t\theight: 80px;\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tz-index: 1;\n\t}\n`;\n\nconst IconContainer = styled.div`\n\tposition: absolute;\n\twidth: 80px;\n\theight: 80px;\n\ttop: 35%;\n\tleft: 15px;\n\tborder-radius: 10px;\n\tz-index: 1;\n\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\tbackground-color: white;\n\tbox-shadow: ${defaultBoxShadow};\n\n\timg {\n\t\twidth: 70%;\n\t}\n`;\n\nconst WorkspaceInfo = styled.section`\n\theight: 40px;\n\tpadding-left: 15px;\n\tpadding-bottom: 10px;\n\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\n\tspan {\n\t\tline-height: 2;\n\t\tpadding: 0 5px;\n\t}\n\n\timg {\n\t\twidth: 20px;\n\t}\n`;\n\nconst DateSpan = styled.span`\n\tpadding-left: 15px;\n`;\n\nexport const SingleWorkspace: FC<IProps> = (props) => {\n\tconst {id, photo, usersCount, workspaceName, lastUpdateDate, icon, title} = props.workspace;\n\n\tconst getLastUpdateText = (): string => {\n\t\tconst today = new Date();\n\t\tconst datesDifference = today.getTime() - lastUpdateDate.getTime();\n\t\tconst daysCount = Math.floor((datesDifference / (1000 * 60 * 60 * 24)) % 7);\n\t\tif (daysCount === 0) return \"today\";\n\t\telse if (daysCount === 1) return \"yesterday\";\n\t\telse return `${daysCount} days ago`;\n\t};\n\n\treturn (\n\t\t<WorkspaceContainer>\n\t\t\t<WorkspaceImage height={\"130px\"} src={photo.url} alt=\"workspace-image\" />\n\t\t\t<IconContainer>\n\t\t\t\t<img src={icon} alt=\"workspace-icon\" />\n\t\t\t</IconContainer>\n\t\t\t<Link to={`/workspace/${id}`}>\n\t\t\t\t<p>\n\t\t\t\t\t{title.slice(0, 20)}\n\t\t\t\t\t{title.length > 20 ? \"...\" : \"\"}\n\t\t\t\t</p>\n\t\t\t</Link>\n\t\t\t<main>\n\t\t\t\t<WorkspaceInfo>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<img src={icon} alt=\"workspace-icon\" />\n\t\t\t\t\t\t{workspaceName}\n\t\t\t\t\t</span>\n\t\t\t\t\t<DotSeparator />\n\t\t\t\t\t<span>{usersCount} users</span>\n\t\t\t\t</WorkspaceInfo>\n\n\t\t\t\t<DateSpan>Last update: {getLastUpdateText()}</DateSpan>\n\t\t\t</main>\n\t\t</WorkspaceContainer>\n\t);\n};\n","import {inject, observer} from \"mobx-react\";\nimport React, {FC} from \"react\";\nimport styled from \"styled-components\";\nimport {defaultBoxShadow} from \"../../assets/variables\";\nimport CustomScrollbar from \"../../common/CustomScrollbar\";\nimport {SectionTitle} from \"../../common/SectionTitle\";\nimport {Workspace} from \"../../interfaces/Workspace\";\nimport {MainPageStore} from \"../../stores/MainPageStore\";\nimport {SingleWorkspace} from \"./SingleWorkspace\";\n\ninterface IProps {\n\tmainPageStore?: MainPageStore;\n}\n\nconst WorkspacesMain = styled.div`\n\tmargin-top: 20px;\n\twidth: 95%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbox-shadow: ${defaultBoxShadow};\n`;\n\nconst WorkspacesContainer = styled.div`\n\tmargin-top: 20px;\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\n\nexport const WorkspacesView: FC<IProps> = ({mainPageStore}) => {\n\tif (!mainPageStore) return <div />;\n\n\treturn (\n\t\t<WorkspacesMain>\n\t\t\t<SectionTitle title={\"Workspaces\"} />\n\t\t\t<CustomScrollbar scrollHorizontallyOnWheel style={{width: \"100%\", height: 300}}>\n\t\t\t\t<WorkspacesContainer>\n\t\t\t\t\t{mainPageStore.workspaces.map((workspace: Workspace) => (\n\t\t\t\t\t\t<SingleWorkspace key={workspace.id} workspace={workspace} />\n\t\t\t\t\t))}\n\t\t\t\t</WorkspacesContainer>\n\t\t\t</CustomScrollbar>\n\t\t</WorkspacesMain>\n\t);\n};\n\nexport const Workspaces = inject(\"mainPageStore\")(observer(WorkspacesView));\n","import React, {FC} from \"react\";\nimport {LatestPublications} from \"./LatestPublications\";\nimport {ResumeYourWork} from \"./ResumeYourWork\";\nimport {Workspaces} from \"./Workspaces\";\n\nexport const MainSectionContent: FC = () => (\n\t<>\n\t\t<LatestPublications />\n\t\t<Workspaces />\n\t\t<ResumeYourWork />\n\t</>\n);\n","import React, {FC} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {AdvancedAccountInfoPage} from \"../../containers/AdvancedAccountInfoPage\";\nimport {Entities} from \"../../containers/Entities\";\nimport {NotFoundPage} from \"../../containers/NotFoundPage\";\nimport {Publications} from \"../../containers/Publications\";\nimport {SingleWorkspaceView} from \"../../containers/Workspaces\";\nimport {MainSectionContent} from \"./MainSectionContent\";\n\nconst RightSectionContainer = styled.div`\n\twidth: calc(100% - 250px);\n\tmax-width: 1100px;\n\theight: calc(100vh - 60px);\n\tbox-sizing: border-box;\n\n\tmargin: 0 auto;\n\tpadding: 20px;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nexport const RightSection: FC = () => (\n\t<RightSectionContainer className={\"RightSection\"}>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/workspace/:id\">\n\t\t\t\t<SingleWorkspaceView />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/entities\">\n\t\t\t\t<Entities />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/account\">\n\t\t\t\t<AdvancedAccountInfoPage />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/publications\">\n\t\t\t\t<Publications />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/\">\n\t\t\t\t<MainSectionContent />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/study-social-app\">\n\t\t\t\t<MainSectionContent />\n\t\t\t</Route>\n\t\t\t<Route component={NotFoundPage} />\n\t\t</Switch>\n\t</RightSectionContainer>\n);\n","import React, {FC} from \"react\";\nimport styled from \"styled-components\";\n\nimport {LeftSection} from \"./LeftSection\";\nimport {RightSection} from \"./RightSection\";\n\nconst Content = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tmin-height: calc(100vh - 50px);\n\theight: auto;\n`;\n\nexport const MainPageContent: FC = () => (\n\t<Content>\n\t\t<LeftSection />\n\t\t<RightSection />\n\t</Content>\n);\n","import React, {Component, ReactElement} from \"react\";\nimport CustomScrollbar from \"../common/CustomScrollbar\";\nimport {MainPageContent} from \"../components/mainPage/MainPageContent\";\n\nexport class MainPage extends Component {\n\tpublic render(): ReactElement {\n\t\treturn (\n\t\t\t<CustomScrollbar style={{height: \"calc(100vh - 60px)\", position: \"absolute\"}}>\n\t\t\t\t<MainPageContent />\n\t\t\t</CustomScrollbar>\n\t\t);\n\t}\n}\n","export default __webpack_public_path__ + \"static/media/logo.8a93330b.png\";","export default __webpack_public_path__ + \"static/media/arrow-down.966238b3.svg\";","import {TextField} from \"@material-ui/core\";\n\nimport React, {ChangeEvent, FC, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {white} from \"../../assets/variables\";\nimport CustomScrollbar from \"../../common/CustomScrollbar\";\nimport {SectionSeparator} from \"../../common/SectionSeparator\";\nimport {DropdownOption} from \"../../interfaces/DropdownOption\";\nimport {DropdownSections} from \"../../interfaces/DropdownSections\";\nimport {grey} from \"@material-ui/core/colors\";\nimport {ButtonWithLink} from \"../../common/ButtonWithLink\";\n\ninterface IProps {\n\tdropdownSections: DropdownSections[];\n\tchangeSelectedOption: (selectedOption: DropdownOption) => void;\n}\n\nconst DropdownViewContainer = styled.div`\n\t.DropdownView {\n\t\tbackground-color: ${white};\n\t\tborder: 1px solid #ccc;\n\t\tbox-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\n\t\tbox-sizing: border-box;\n\t\tmargin-top: -1px;\n\t\theight: auto;\n\t\tmax-height: 400px;\n\t\toverflow-y: auto;\n\t\tposition: absolute;\n\t\ttop: 100%;\n\t\twidth: 240px;\n\t\tz-index: 1000;\n\t\t-webkit-overflow-scrolling: touch;\n\t}\n\n\t.filterInput {\n\t\twidth: calc(90% - 10px);\n\t\tmargin: 10px 5%;\n\n\t\t.MuiOutlinedInput-input {\n\t\t\tpadding: 5px 15px;\n\t\t\tfont-size: 0.9em;\n\t\t\tfont-weight: 400;\n\t\t}\n\n\t\t.MuiInputLabel-outlined {\n\t\t\ttransform: translate(14px, 15px) scale(1);\n\t\t}\n\n\t\t.MuiInputLabel-outlined.Mui-focused {\n\t\t\ttransform: translate(14px, -6px) scale(0.75);\n\t\t}\n\t}\n`;\n\nconst SectionTitle = styled.p`\n\tcolor: ${grey[\"600\"]};\n\tfont-size: 13px;\n\tpadding-left: 5px;\n\tmargin: 5px 0;\n`;\n\nexport const DropdownView: FC<IProps> = (props) => {\n\tconst [value, changeValue] = useState<string>(\"\");\n\tconst {dropdownSections} = props;\n\n\tconst onChange = (e: ChangeEvent) => {\n\t\tconst inputValue = (e.target as HTMLInputElement).value;\n\n\t\tchangeValue(inputValue);\n\t};\n\n\tconst createSection = (section: DropdownSections) => {\n\t\treturn (\n\t\t\t<DropdownViewContainer key={section.title}>\n\t\t\t\t{!section.options && <SectionSeparator />}\n\t\t\t\t<SectionTitle>{section.title}</SectionTitle>\n\n\t\t\t\t{section.options\n\t\t\t\t\t? section.options?.map((option: DropdownOption) => {\n\t\t\t\t\t\t\treturn option.title.toLowerCase().includes(value.toLowerCase()) ? (\n\t\t\t\t\t\t\t\t<ButtonWithLink\n\t\t\t\t\t\t\t\t\tkey={option.title}\n\t\t\t\t\t\t\t\t\tlink={option.link}\n\t\t\t\t\t\t\t\t\ticon={option.icon}\n\t\t\t\t\t\t\t\t\ttext={option.title}\n\t\t\t\t\t\t\t\t\tonClick={() => props.changeSelectedOption(option)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : null;\n\t\t\t\t\t  })\n\t\t\t\t\t: section.component}\n\t\t\t</DropdownViewContainer>\n\t\t);\n\t};\n\treturn (\n\t\t<DropdownViewContainer>\n\t\t\t<CustomScrollbar className={\"DropdownView\"} style={{position: \"absolute\", width: 240}}>\n\t\t\t\t<TextField\n\t\t\t\t\tsize={\"small\"}\n\t\t\t\t\tclassName=\"filterInput\"\n\t\t\t\t\tplaceholder=\"Filter\"\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t\t{dropdownSections.map(createSection)}\n\t\t\t</CustomScrollbar>\n\t\t</DropdownViewContainer>\n\t);\n};\n","import React, {FC, useState} from \"react\";\n\nimport styled from \"styled-components\";\nimport arrow from \"../../assets/icons/arrow-down.svg\";\nimport {DropdownContainer} from \"../../common/DropdownContainer\";\nimport {DropdownOption} from \"../../interfaces/DropdownOption\";\nimport {DropdownView} from \"./DropdownView\";\nimport {dropdownSections} from \"../../consts/DropdownSections\";\nimport {inject, observer} from \"mobx-react\";\nimport {MainPageStore} from \"../../stores/MainPageStore\";\n\ninterface IProps {\n\tmainPageStore?: MainPageStore;\n}\n\nconst DropdownArrow = styled.img<{isOpen: boolean}>`\n\ttransform: ${(props) => (props.isOpen ? \"rotate(180deg)\" : \"rotate(0deg)\")};\n`;\n\nconst DropdownButton = styled.div`\n\tposition: relative;\n\toverflow: hidden;\n\tbackground-color: white;\n\tborder: 1px solid #ccc;\n\tborder-radius: 2px;\n\tbox-sizing: border-box;\n\tcolor: #333;\n\tcursor: default;\n\toutline: none;\n\ttransition: all 200ms ease;\n\tdisplay: flex;\n\theight: 30px;\n\tpadding: 0 20px;\n\tflex-direction: row;\n\talign-items: center;\n\twidth: 240px;\n\tjustify-content: space-between;\n\n\tp {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\n\t\tfont-size: 0.8em;\n\t\tfont-weight: 400;\n\n\t\timg {\n\t\t\theight: 15px;\n\t\t\tpadding: 0 10px;\n\t\t}\n\t}\n`;\n\nconst Dropdown: FC<IProps> = ({mainPageStore}) => {\n\tconst [isOpen, changeOpen] = useState<boolean>(false);\n\n\tconst getButtonView = () => {\n\t\treturn (\n\t\t\t<DropdownButton>\n\t\t\t\t<p>\n\t\t\t\t\t<img src={mainPageStore?.currentDropdownOption?.icon} alt={\"home icon\"} />\n\t\t\t\t\t{mainPageStore?.currentDropdownOption?.title}\n\t\t\t\t</p>\n\t\t\t\t<DropdownArrow src={arrow} isOpen={isOpen} />\n\t\t\t</DropdownButton>\n\t\t);\n\t};\n\n\tif (!mainPageStore) return null;\n\treturn (\n\t\t<DropdownContainer toggleDropdown={(isOpen: boolean) => changeOpen(isOpen)} buttonView={getButtonView()}>\n\t\t\t<DropdownView\n\t\t\t\tdropdownSections={dropdownSections}\n\t\t\t\tchangeSelectedOption={(selectedOption: DropdownOption) =>\n\t\t\t\t\tmainPageStore.changeCurrentDropdownSection(selectedOption)\n\t\t\t\t}\n\t\t\t/>\n\t\t</DropdownContainer>\n\t);\n};\n\nexport const NavDropdown = inject(\"mainPageStore\")(observer(Dropdown));\n","import React, {FC} from \"react\";\nimport {Badge, SvgIconTypeMap} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport {OverridableComponent} from \"@material-ui/core/OverridableComponent\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n\tbadgeContent: string | number;\n\tbuttonBackground?: string;\n\trounded?: boolean;\n\tbadgeColor?: \"primary\" | \"secondary\" | \"default\" | \"error\";\n\ticonColor?: \"inherit\" | \"primary\" | \"secondary\" | \"action\" | \"error\" | \"disabled\";\n\ticon?: OverridableComponent<SvgIconTypeMap>;\n\tonClick?: () => void;\n}\n\nconst Wrapper = styled.div<{rounded: boolean}>`\n\tbutton {\n\t\twidth: ${(props) => (props.rounded ? \"40px\" : \"unset\")};\n\t\theight: ${(props) => (props.rounded ? \"40px\" : \"unset\")};\n\t\tmin-width: unset;\n\t\tmargin-left: 15px;\n\t}\n`;\n\nexport const ButtonWithBadge: FC<IProps> = ({\n\tbadgeContent,\n\tbadgeColor,\n\ticonColor,\n\ticon,\n\tbuttonBackground,\n\trounded,\n\tonClick,\n}) => {\n\tconst backgroundColor = buttonBackground || \"#f5f5f5\";\n\tconst borderRadius = rounded ? \"100%\" : 0;\n\n\treturn (\n\t\t<Wrapper rounded={rounded || false}>\n\t\t\t<Button style={{backgroundColor: backgroundColor, borderRadius: borderRadius}} onClick={() => onClick?.()}>\n\t\t\t\t{icon && React.createElement(icon, {color: iconColor || \"disabled\"})}\n\t\t\t\t{badgeContent && <Badge badgeContent={badgeContent} color={badgeColor || \"primary\"} />}\n\t\t\t</Button>\n\t\t</Wrapper>\n\t);\n};\n","import {Input, InputAdornment} from \"@material-ui/core\";\nimport React, {FC} from \"react\";\n\nimport styled from \"styled-components\";\nimport homeIcon from \"../assets/icons/house.svg\";\nimport logo from \"../assets/images/logo.png\";\nimport {defaultBoxShadow} from \"../assets/variables\";\nimport {NavDropdown} from \"../components/navbar/NavDropdown\";\nimport {ButtonWithLink} from \"../common/ButtonWithLink\";\nimport {ButtonWithBadge} from \"../common/ButtonWithBadge\";\nimport SmsIcon from \"@material-ui/icons/Sms\";\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\nimport SearchRoundedIcon from \"@material-ui/icons/SearchRounded\";\nimport {inject, observer} from \"mobx-react\";\nimport {MainPageStore} from \"../stores/MainPageStore\";\nimport {defaultSection} from \"../consts/DropdownSections\";\n\ninterface IProps {\n\tmainPageStore?: MainPageStore;\n}\n\nconst NavElement = styled.nav`\n\tpadding: 0 10px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\theight: 50px;\n\tposition: relative;\n\tz-index: 1000;\n\n\tbackground-color: white;\n\tbox-shadow: ${defaultBoxShadow};\n\n\t.searchInput {\n\t\twidth: 50%;\n\t\tmax-width: 500px;\n\t\tmargin: 0 30px;\n\t}\n`;\n\nconst FirstNavSection = styled.div`\n\twidth: 400px;\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: flex-start;\n`;\n\nconst EndNavSection = styled(FirstNavSection)`\n\tjustify-content: end;\n\n\tbutton {\n\t\tjustify-content: center !important;\n\t}\n\n\t.MuiBadge-root {\n\t\ttop: -10px;\n\t\tright: -5px;\n\t}\n`;\n\nconst NavBarView: FC<IProps> = ({mainPageStore}) => (\n\t<NavElement>\n\t\t<FirstNavSection>\n\t\t\t<img src={logo} alt={\"logo\"} style={{height: 40}} />\n\t\t\t<NavDropdown />\n\t\t</FirstNavSection>\n\n\t\t<Input\n\t\t\tclassName={\"searchInput\"}\n\t\t\tplaceholder={\"Search something...\"}\n\t\t\tendAdornment={\n\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t<SearchRoundedIcon />\n\t\t\t\t</InputAdornment>\n\t\t\t}\n\t\t/>\n\n\t\t<EndNavSection>\n\t\t\t<ButtonWithLink\n\t\t\t\tlink={\"/\"}\n\t\t\t\ttext={\"\"}\n\t\t\t\ticon={homeIcon}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tmainPageStore?.changeCurrentDropdownSection(defaultSection);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<ButtonWithBadge badgeContent={3} icon={SmsIcon} rounded />\n\t\t\t<ButtonWithBadge badgeContent={5} icon={NotificationsActiveIcon} rounded />\n\t\t</EndNavSection>\n\t</NavElement>\n);\n\nexport const NavBar = inject(\"mainPageStore\")(observer(NavBarView));\n","import axios from \"axios\";\nimport document from \"../assets/icons/document.svg\";\nimport contract from \"../assets/icons/document.svg\";\nimport {EntitiesFiltersDefinitions} from \"../consts/EntitiesFiltersDefinitions\";\nimport {Comment} from \"../interfaces/Comment\";\nimport {LatestPublication} from \"../interfaces/LatestPublication\";\nimport {Photo} from \"../interfaces/Photo\";\nimport {Post} from \"../interfaces/Posts\";\nimport {User} from \"../interfaces/User\";\nimport {Work} from \"../interfaces/Work\";\nimport {Workspace} from \"../interfaces/Workspace\";\n\nexport const API_URL = \"https://jsonplaceholder.cypress.io\";\nexport const IMAGES_API_URL = \"https://picsum.photos/v2\";\n\n// const OLD_API_URL = \"https://jsonplaceholder.typicode.com\";\n\nexport class MainPageApi {\n\tpublic static getComments = async (): Promise<Comment[]> => {\n\t\tconst comments = await axios.get(`${API_URL}/comments`);\n\t\treturn comments.data;\n\t};\n\n\tpublic static getUsers = async (): Promise<User[]> => {\n\t\tconst users = await axios.get(`${API_URL}/users`);\n\t\treturn users.data;\n\t};\n\n\tpublic static getLoggedUser = async (): Promise<User> => {\n\t\tconst user = await axios.get(`${API_URL}/users?id=1`);\n\t\tconst photo = await MainPageApi.getPhotos(1);\n\n\t\tconst loggedUser = user.data[0];\n\t\tloggedUser.photo = photo[0];\n\t\tloggedUser.company.role = \"Partner\";\n\n\t\treturn loggedUser;\n\t};\n\n\tpublic static getPosts = async (userId: number): Promise<Post[]> => {\n\t\tconst posts = await axios.get(`${API_URL}/posts?userId=${userId}`);\n\t\treturn posts.data;\n\t};\n\n\tpublic static getPhotos = async (limit: number = 100): Promise<Photo[]> => {\n\t\tconst photos = await axios.get(`${IMAGES_API_URL}/list?limit=${limit}`);\n\n\t\treturn photos.data.map((photo: Photo) => ({\n\t\t\t...photo,\n\t\t\turl: photo.download_url,\n\t\t}));\n\t};\n\n\tpublic static getResumeYourWorks = async (): Promise<Work[]> => {\n\t\tconst comments: Comment[] = await MainPageApi.getComments();\n\t\tconst users: User[] = await MainPageApi.getUsers();\n\t\treturn comments.map((comment: Comment) => {\n\t\t\tconst randomIndex = Math.floor(Math.random() * users.length);\n\t\t\tconst randomWorkspaceDefinitionIndex = Math.floor(Math.random() * EntitiesFiltersDefinitions.length);\n\t\t\treturn {\n\t\t\t\t...comment,\n\t\t\t\tworkspaceDefinition: EntitiesFiltersDefinitions[randomWorkspaceDefinitionIndex],\n\t\t\t\tuser: users[randomIndex],\n\t\t\t\ticon: contract,\n\t\t\t\tworkspaceName: \"Company\",\n\t\t\t\tlastUpdateDate: new Date(),\n\t\t\t};\n\t\t});\n\t};\n\n\tpublic static getWorkspaces = async (): Promise<Workspace[]> => {\n\t\tconst comments: Comment[] = await MainPageApi.getComments();\n\t\tconst users: User[] = await MainPageApi.getUsers();\n\t\tconst photos: Photo[] = await MainPageApi.getPhotos();\n\n\t\tconst works: Workspace[] = comments.map((comment: Comment) => {\n\t\t\tconst randomPhotoIndex = Math.floor(Math.random() * photos.length);\n\t\t\tconst randomIndex = Math.floor(Math.random() * users.length);\n\t\t\treturn {\n\t\t\t\tid: `${comment.id}`,\n\t\t\t\ttitle: comment.name.slice(0, 20),\n\t\t\t\tdescription: comment.body,\n\t\t\t\tphoto: photos[randomPhotoIndex],\n\t\t\t\tusersCount: randomIndex,\n\t\t\t\tworkspaceName: users[randomIndex].company.name,\n\t\t\t\tlastUpdateDate: new Date(),\n\t\t\t\ticon: document,\n\t\t\t};\n\t\t});\n\n\t\treturn works.slice(0, 10);\n\t};\n\n\tpublic static getLatestPublications = async (user: User): Promise<LatestPublication[]> => {\n\t\tconst posts: Post[] = await MainPageApi.getPosts(user.id);\n\t\tconst photos: Photo[] = await MainPageApi.getPhotos();\n\n\t\treturn posts.map((post: Post) => {\n\t\t\tconst randomPhotoIndex = Math.floor(Math.random() * photos.length);\n\t\t\treturn {\n\t\t\t\t...post,\n\t\t\t\tlastUpdateDate: new Date(),\n\t\t\t\tuser: user,\n\t\t\t\tphoto: photos[randomPhotoIndex],\n\t\t\t};\n\t\t});\n\t};\n}\n","import {Comment} from \"../interfaces/Comment\";\nimport {Fee} from \"../interfaces/Fee\";\nimport {Proposal} from \"../interfaces/Proposal\";\nimport {User} from \"../interfaces/User\";\nimport {MainPageApi} from \"./MainPageApi\";\n\nexport class AdvancedAccountInfoApi {\n\tpublic static getProposals = async (): Promise<Proposal[]> => {\n\t\tconst comments: Comment[] = await MainPageApi.getComments();\n\t\tconst users: User[] = await MainPageApi.getUsers();\n\n\t\treturn comments.map((comment: Comment) => {\n\t\t\tconst randomUserIndex = Math.floor(Math.random() * users.length);\n\t\t\tconst user = users[randomUserIndex];\n\t\t\treturn {\n\t\t\t\tid: comment.id,\n\t\t\t\tname: comment.name,\n\t\t\t\tentity: user.username,\n\t\t\t\tcity: user.address.city,\n\t\t\t\texpertise: `#${comment.body.split(\" \")[0]}`,\n\t\t\t\tdate: new Date(),\n\t\t\t\tcompany: user.company.name,\n\t\t\t};\n\t\t});\n\t};\n\n\tpublic static getFees = async (): Promise<Fee[]> => {\n\t\tconst users: User[] = await MainPageApi.getUsers();\n\t\tconst max = 2021;\n\t\tconst min = 2000;\n\t\treturn users.slice(0, 10).map((user: User, index: number) => {\n\t\t\treturn {\n\t\t\t\tid: index,\n\t\t\t\tyear: Math.floor(Math.random() * (max - min) + min),\n\t\t\t\tcostCenter: Math.floor(Math.random() * 1000 + 10),\n\t\t\t\ttotalAmount: Math.floor(Math.random() * 100000 + 10000),\n\t\t\t\tlawFirm: user.company.name,\n\t\t\t};\n\t\t});\n\t};\n}\n","import {action, makeAutoObservable, observable} from \"mobx\";\nimport {AdvancedAccountInfoApi} from \"../api/AdvancedAccountInfoApi\";\nimport {Fee} from \"../interfaces/Fee\";\nimport {Proposal} from \"../interfaces/Proposal\";\n\nexport class AdvancedAccountInfo {\n\t@observable public proposals: Proposal[] | null = null;\n\t@observable public fees: Fee[] | null = null;\n\n\tconstructor() {\n\t\tmakeAutoObservable(this);\n\n\t\tthis.getData();\n\t}\n\n\tprivate getData = async () => {\n\t\tawait this.getProposals();\n\t\tawait this.getFees();\n\t};\n\n\t@action\n\tpublic getProposals = async () => {\n\t\tthis.proposals = await AdvancedAccountInfoApi.getProposals();\n\t};\n\n\t@action\n\tpublic getFees = async () => {\n\t\tthis.fees = await AdvancedAccountInfoApi.getFees();\n\t};\n}\n","import axios from \"axios\";\nimport {Entity} from \"../interfaces/Entity\";\nimport {Photo} from \"../interfaces/Photo\";\nimport {Todo} from \"../interfaces/Todo\";\nimport {User} from \"../interfaces/User\";\nimport {API_URL, MainPageApi} from \"./MainPageApi\";\n\nexport class EntitiesApi {\n\tpublic static getTodos = async (): Promise<Todo[]> => {\n\t\tconst todos = await axios.get(`${API_URL}/todos`);\n\t\treturn todos.data;\n\t};\n\n\tpublic static getEntities = async (): Promise<Entity[]> => {\n\t\tconst todos: Todo[] = await EntitiesApi.getTodos();\n\t\tconst photos: Photo[] = await MainPageApi.getPhotos();\n\t\tconst users: User[] = await MainPageApi.getUsers();\n\n\t\treturn todos.map((todo: Todo) => {\n\t\t\tconst randomUserIndex = Math.floor(Math.random() * users.length);\n\t\t\tconst randomPhotoIndex = Math.floor(Math.random() * photos.length);\n\n\t\t\treturn {\n\t\t\t\tid: todo.id,\n\t\t\t\tname: todo.title,\n\t\t\t\tcompany: users[randomUserIndex].company,\n\t\t\t\taddress: users[randomUserIndex].address,\n\t\t\t\tphoto: photos[randomPhotoIndex],\n\t\t\t};\n\t\t});\n\t};\n}\n","import {action, makeAutoObservable, observable, runInAction} from \"mobx\";\nimport {EntitiesApi} from \"../api/EntitiesApi\";\nimport {Condition} from \"../consts/Condition\";\nimport {FilterByProperty} from \"../consts/FilterByProperty\";\nimport {LogicalOperation} from \"../consts/LogicalOperation\";\nimport {Entity} from \"../interfaces/Entity\";\nimport {FilterDefinition} from \"../interfaces/FilterDefinition\";\n\nexport class EntitiesStore {\n\t@observable public entities: Entity[] = [];\n\t@observable public filteredEntities: Entity[] = [];\n\t@observable public filterInputValue: string = \"\";\n\t@observable public filterDefinitions: FilterDefinition[] = [];\n\t@observable public nextFilterId: number = 0;\n\n\tconstructor() {\n\t\tmakeAutoObservable(this);\n\n\t\tthis.getData();\n\t}\n\n\t@action\n\tprivate getData = async () => {\n\t\tawait this.getEntities();\n\t};\n\n\t@action\n\tpublic addNewFilterDefinition = (definition: FilterDefinition) => {\n\t\tthis.filterDefinitions.push(definition);\n\t\tthis.nextFilterId++;\n\t};\n\n\t@action\n\tpublic changeFilterInputValue = (value: string) => {\n\t\tthis.filterInputValue = value;\n\t\tthis.filteredEntities = (this.entities || []).filter((entity) => entity.name.includes(value));\n\t};\n\n\t@action\n\tprotected getCondition = (id: number): FilterDefinition | undefined => {\n\t\treturn this.filterDefinitions.find((definition) => definition.id === id);\n\t};\n\n\t@action\n\tpublic removeFilterDefinition = (id: number) => {\n\t\tconst filterDefinitionIndex = this.filterDefinitions.findIndex(\n\t\t\t(filterDefinition: FilterDefinition) => filterDefinition.id === id\n\t\t);\n\n\t\tthis.filterDefinitions.splice(filterDefinitionIndex, 1);\n\t};\n\n\t@action\n\tpublic changeFilterDefinitionInputValue = (id: number, conditionName: string, value: string) => {\n\t\tconst filterDefinition = this.getCondition(id);\n\t\tif (filterDefinition) {\n\t\t\tfilterDefinition.condition.conditionValue[conditionName] = value;\n\t\t}\n\t};\n\n\t@action\n\tpublic changeCondition = (id: number, condition: Condition) => {\n\t\tconst filterDefinition = this.getCondition(id);\n\t\tif (filterDefinition) filterDefinition.condition.conditionName = condition;\n\t};\n\n\t@action\n\tpublic changeFilterByProperty = (id: number, filterByProperty: FilterByProperty) => {\n\t\tconst filterDefinition = this.getCondition(id);\n\t\tif (filterDefinition) filterDefinition.filterByProperty = filterByProperty;\n\t};\n\n\t@action\n\tpublic changeLogicalOperation = (id: number, logicalOperation: LogicalOperation) => {\n\t\tconst filterDefinition = this.getCondition(id);\n\t\tif (filterDefinition) filterDefinition.logicalOperation = logicalOperation;\n\t};\n\n\t@action\n\tpublic getEntities = async () => {\n\t\tconst entities = await EntitiesApi.getEntities();\n\n\t\trunInAction(() => {\n\t\t\tthis.entities = entities;\n\t\t});\n\t};\n}\n","import {action, makeAutoObservable, observable, runInAction} from \"mobx\";\nimport {MainPageApi} from \"../api/MainPageApi\";\nimport {EntitiesFiltersName} from \"../consts/EntitiesFiltersDefinitions\";\nimport {LatestPublication} from \"../interfaces/LatestPublication\";\nimport {User} from \"../interfaces/User\";\nimport {Work} from \"../interfaces/Work\";\nimport {Workspace} from \"../interfaces/Workspace\";\nimport {defaultSection} from \"../consts/DropdownSections\";\nimport {DropdownOption} from \"../interfaces/DropdownOption\";\n\nexport class MainPageStore {\n\t@observable private works: Work[] = [];\n\t@observable private filteredInputValue: string = \"\";\n\t@observable public filteredWorks: Work[] = [];\n\t@observable public currentLoggedUser: User | null = null;\n\t@observable public latestPublications: LatestPublication[] | null = null;\n\n\t@observable public currentDropdownOption: DropdownOption = defaultSection;\n\n\t//workspaces\n\t@observable public workspaces: Workspace[] = [];\n\t@observable public workspacesFilters: EntitiesFiltersName[] = [EntitiesFiltersName.ALL];\n\n\tconstructor() {\n\t\tmakeAutoObservable(this);\n\n\t\tthis.getData();\n\t}\n\n\t@action\n\tprivate getData = async () => {\n\t\tawait this.getLoggedUser();\n\t\tawait this.getYourWorks();\n\t\tawait this.getWorkspaces();\n\t\tawait this.getLatestPublications();\n\t};\n\n\tpublic get resumeYourWorks(): Work[] {\n\t\treturn this.works || [];\n\t}\n\n\t@action\n\tpublic getLoggedUser = async () => {\n\t\tconst currentLoggedUser = await MainPageApi.getLoggedUser();\n\n\t\trunInAction(() => {\n\t\t\tthis.currentLoggedUser = currentLoggedUser;\n\t\t});\n\t};\n\n\t@action\n\tpublic async getYourWorks() {\n\t\tconst works = await MainPageApi.getResumeYourWorks();\n\n\t\trunInAction(() => {\n\t\t\tthis.works = works;\n\t\t});\n\t}\n\n\t@action\n\tpublic async getWorkspaces() {\n\t\tconst workspaces = await MainPageApi.getWorkspaces();\n\n\t\trunInAction(() => {\n\t\t\tthis.workspaces = workspaces;\n\t\t});\n\t}\n\n\t@action\n\tpublic async getLatestPublications() {\n\t\tif (this.currentLoggedUser) {\n\t\t\tconst publications = await MainPageApi.getLatestPublications(this.currentLoggedUser);\n\n\t\t\trunInAction(() => {\n\t\t\t\tthis.latestPublications = publications;\n\t\t\t});\n\t\t}\n\t}\n\n\t@action\n\tpublic filterWorks = (text: string) => {\n\t\tthis.filteredInputValue = text;\n\t\tthis.filteredWorks = this.works.filter((work) => work.name.toLowerCase().includes(text.toLowerCase()));\n\t};\n\n\t@action\n\tpublic changeWorkspaceTitle = (id: string, value: string) => {\n\t\tconst workspace = this.workspaces.find((workspace) => workspace.id === id);\n\n\t\tif (workspace) workspace.title = value;\n\t};\n\n\t@action\n\tpublic changeWorkspaceDescription = (id: string, value: string) => {\n\t\tconst workspace = this.workspaces.find((workspace) => workspace.id === id);\n\n\t\tif (workspace) workspace.description = value;\n\t};\n\n\t@action\n\tpublic addOrRemoveWorkspaceFilter = (name: EntitiesFiltersName) => {\n\t\tlet filters = [...this.workspacesFilters];\n\t\tconst index = filters.indexOf(name);\n\n\t\tif (name === EntitiesFiltersName.ALL) {\n\t\t\tif (index !== -1 && filters.length === 1) filters = [];\n\t\t\telse if (index !== -1 && filters.length > 1) filters.splice(index, 1);\n\t\t\telse filters = [name];\n\t\t} else {\n\t\t\tif (index !== -1) filters.splice(index, 1);\n\t\t\telse filters.push(name);\n\t\t}\n\n\t\tthis.workspacesFilters = filters;\n\t};\n\n\t@action\n\tpublic changeCurrentDropdownSection = (section: DropdownOption) => {\n\t\tthis.currentDropdownOption = section;\n\t};\n}\n","import {makeAutoObservable} from \"mobx\";\nimport {AdvancedAccountInfo} from \"./AdvancedAccountInfo\";\nimport {EntitiesStore} from \"./EntitiesStore\";\nimport {MainPageStore} from \"./MainPageStore\";\n\nclass RootStoreClass {\n\tmainPageStore: MainPageStore;\n\tadvancedAccountInfo: AdvancedAccountInfo;\n\tentitiesStore: EntitiesStore;\n\n\tconstructor() {\n\t\tmakeAutoObservable(this);\n\n\t\tthis.mainPageStore = new MainPageStore();\n\t\tthis.advancedAccountInfo = new AdvancedAccountInfo();\n\t\tthis.entitiesStore = new EntitiesStore();\n\t}\n}\n\nexport const RootStore = new RootStoreClass();\n","import {Provider} from \"mobx-react\";\nimport React, {Component, ReactElement} from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {MainPage} from \"./containers/MainPage\";\nimport {NavBar} from \"./containers/NavBar\";\nimport {RootStore} from \"./stores/RootStore\";\n\nconst AppContainer = styled.div`\n\tmargin: 0;\n\tpadding: 0;\n\n\ta {\n\t\tcolor: inherit;\n\t\ttext-decoration: none;\n\t}\n`;\n\nexport class App extends Component {\n\tpublic render(): ReactElement {\n\t\treturn (\n\t\t\t<AppContainer>\n\t\t\t\t<Provider\n\t\t\t\t\trootStore={RootStore}\n\t\t\t\t\tmainPageStore={RootStore.mainPageStore}\n\t\t\t\t\tadvancedAccountInfo={RootStore.advancedAccountInfo}\n\t\t\t\t\tentitiesStore={RootStore.entitiesStore}\n\t\t\t\t>\n\t\t\t\t\t<BrowserRouter>\n\t\t\t\t\t\t<NavBar />\n\t\t\t\t\t\t<MainPage />\n\t\t\t\t\t</BrowserRouter>\n\t\t\t\t</Provider>\n\t\t\t</AppContainer>\n\t\t);\n\t}\n}\n","import {ReportHandler} from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry) {\n\t\timport(\"web-vitals\").then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {App} from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}